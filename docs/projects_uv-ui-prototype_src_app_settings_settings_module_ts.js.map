{"version":3,"file":"projects_uv-ui-prototype_src_app_settings_settings_module_ts.js","mappings":"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","sources":["./projects/uv-ui-prototype/src/app/settings/connector-creator/connector-creator-steps.ts","./projects/uv-ui-prototype/src/app/settings/connector-creator/connector-creator.component.ts","./projects/uv-ui-prototype/src/app/settings/connector-creator/connector-creator.component.html","./projects/uv-ui-prototype/src/app/settings/connector-table/connector-cols.ts","./projects/uv-ui-prototype/src/app/settings/connector-table/connector-data.ts","./projects/uv-ui-prototype/src/app/settings/connector-table/connector-table.component.ts","./projects/uv-ui-prototype/src/app/settings/connector-table/connector-table.component.html","./projects/uv-ui-prototype/src/app/settings/settings-menu/settings-menu.component.ts","./projects/uv-ui-prototype/src/app/settings/settings-menu/settings-menu.component.html","./projects/uv-ui-prototype/src/app/settings/settings-menu/settings-menu.module.ts","./projects/uv-ui-prototype/src/app/settings/settings-routing.module.ts","./projects/uv-ui-prototype/src/app/settings/settings-sub-navbar/settings-sub-navbar.component.ts","./projects/uv-ui-prototype/src/app/settings/settings-sub-navbar/settings-sub-navbar.component.html","./projects/uv-ui-prototype/src/app/settings/settings.component.ts","./projects/uv-ui-prototype/src/app/settings/settings.component.html","./projects/uv-ui-prototype/src/app/settings/settings.module.ts","./projects/uv-ui-prototype/src/app/shared/position-element.directive.ts"],"sourcesContent":["import { ConnectorCreatorFormValue } from \"./connector-creator-form.model\";\n\nexport const connectorCreatorSteps: ConnectorCreatorFormValue[] = [\n    {\n        sectionTitle: 'Details',\n        name: 'details',\n        required: true,\n        complete: false,\n        yPos: '',\n        steps: [\n            {\n                title: 'Connector Name',\n                yPos: '',\n                name: 'connection-name',\n                required: true,\n                complete: false,\n                selection: '',\n                type: 'input',\n                options: ['']\n            },\n            {\n                title: 'Restricted Access Format',\n                yPos: '',\n                name: 'restricted-access-format',\n                required: true,\n                complete: false,\n                selection: '',\n                type: 'dropdown',\n                options: [\n                    'Hidden', \n                    'Restricted'\n                ]\n            }\n        ]\n    },\n    {\n        sectionTitle: 'Setup',\n        name: 'setup',\n        required: true,\n        complete: false,\n        yPos: '',\n        steps: [\n            {\n                title: 'Connection Type',\n                yPos: '',\n                name: 'connection-type',\n                required: true,\n                complete: false,\n                selection: '',\n                type: 'dropdown',\n                options: [\n                    'Gen2', \n                    'Option', \n                    'Option 2'\n                ]\n            },\n            {\n                title: 'Authorization Method',\n                yPos: '',\n                name: 'authorization-method',\n                required: true,\n                complete: false,\n                selection: '',\n                type: 'dropdown',\n                options: [\n                    'Active Directory Service Principal (recommended)', \n                    'Option', \n                    'Option 2'\n                ]\n            },\n            {\n                title: 'Account Name',\n                yPos: '',\n                name: 'account-name',\n                required: true,\n                complete: false,\n                selection: '',\n                type: 'input',\n                options: ['']\n            },\n            {\n                title: 'Client ID',\n                yPos: '',\n                name: 'client-id',\n                required: true,\n                complete: false,\n                selection: '',\n                type: 'input',\n                options: ['']\n            },\n            {\n                title: 'Tenant ID',\n                yPos: '',\n                name: 'tenant-id',\n                required: true,\n                complete: false,\n                selection: '',\n                type: 'input',\n                options: ['']\n            }\n        ]\n    }\n]","import { Component, ElementRef, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { ConnectorCreatorFormValue, ConnectorCreatorFormValueStep } from './connector-creator-form.model';\nimport { connectorCreatorSteps } from './connector-creator-steps';\n\n@Component({\n  selector: 'app-connector-creator',\n  templateUrl: './connector-creator.component.html',\n  styleUrls: ['./connector-creator.component.scss']\n})\nexport class ConnectorCreatorComponent implements OnInit {\n\n  public connectorCreatorSteps = connectorCreatorSteps;\n\n  @ViewChildren(\"formSection\") private formSections: QueryList<ElementRef>;\n  @ViewChildren(\"formStep\") private formSteps: QueryList<ElementRef>;\n\n  public getYPos(el: string): number {\n    return this.elRef.nativeElement.querySelector(el).offsetTop;\n  }\n\n  public setYPos() {\n    const sectionElements = this.formSections;\n    const stepElements = this.formSteps;\n    const sections = this.connectorCreatorSteps;\n    sectionElements.forEach((el) => {\n      sections.map((section) => {\n        if (section.name === el.nativeElement.id) {\n          section.yPos = el.nativeElement.offsetTop\n        } \n      })\n    }) \n    stepElements.forEach((el) => {\n        sections.forEach(section => {\n          section.steps.map((step: ConnectorCreatorFormValueStep) => {\n            if (step.name === el.nativeElement.id) {\n              step.yPos = el.nativeElement.offsetTop\n            } \n          })\n        })\n      })\n  }\n\n  public enterFormInputSelection(event: Event, step: ConnectorCreatorFormValueStep, section: ConnectorCreatorFormValue) {\n    const target = event.target as HTMLTextAreaElement;\n    target.value.length > 2 ? step.complete = true : step.complete = false;\n    this.checkIfSectionComplete(section);\n  }\n\n  public selectFormDropdownOption(step: ConnectorCreatorFormValueStep, option: string, section: ConnectorCreatorFormValue) {\n    step.selection = option;\n    step.complete = true;\n    this.checkIfSectionComplete(section);\n  }\n\n  public checkIfSectionComplete(section: ConnectorCreatorFormValue) {\n    const result = section.steps.every(step => {\n        return step.complete\n    })\n    result ? section.complete = true : section.complete = false;\n  }\n\n  constructor(\n    private elRef:ElementRef) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewChecked(): void {\n    this.setYPos();\n  }\n\n}\n","<div class=\"container padding-md flex flex-column\">\n\n    <div #formSection *ngFor=\"let section of connectorCreatorSteps\" \n        yPosition [topPosition]=\"section.complete ? '' : formSectionYPos\" \n        class=\"margin-bottom-md\" [attr.id]=\"section.name\">\n\n        <div class=\"flex flex-column\">\n            <h4 class=\"margin-bottom-sm\">{{section.sectionTitle}}</h4>\n\n            <div class=\"flex flex-column gap-xs\">\n\n                <div #formStep class=\"form-item\" \n                *ngFor=\"let step of section.steps\"\n                [ngSwitch]=\"step.type\" \n                [attr.id]=\"step.name\">\n                \n                    <div *ngSwitchCase=\"'input'\">\n                        <uvx-text-input \n                        (keyup)=\"enterFormInputSelection($event, step, section)\"\n                        [label]=\"step.title\" \n                        [value]=\"\"\n                        [required]=\"step.required\"></uvx-text-input>\n                    </div>\n                    \n                    <div *ngSwitchCase=\"'dropdown'\">\n                        <uvx-dropdown \n                            [hasBorder]=\"true\" \n                            [label]=\"step.title\" \n                            [required]=\"step.required\">\n                            <span title>{{step.selection != '' ? step.selection : step.options[0]}}</span>\n                            <span options \n                                (click)=\"selectFormDropdownOption(step, option, section)\"\n                                *ngFor=\"let option of step.options\"\n                                class=\"custom-option flex justify-content-space-between\">\n                                {{option}}\n                            </span>\n                        </uvx-dropdown>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <h4>Data Source</h4>\n    <div class=\"divider margin-top-sm margin-bottom-sm\"></div>\n    <uvx-button label=\"+ Add Additional File Path\" class=\"margin-bottom-sm\"></uvx-button>\n    <uvx-button label=\"Add Container\" mode=\"primary\"></uvx-button>\n</div>","export const connectorCols = [\n    {\n        colName: 'Name',\n        fieldName: 'name',\n        icon: 'search'\n    },\n    {\n        colName: 'Type',\n        fieldName: 'type',\n        icon: 'list-right'\n    },\n    {\n        colName: 'Last Modified',\n        fieldName: 'lastModified',\n        icon: 'calendar'\n    },\n    {\n        colName: 'Restricted Access',\n        fieldName: 'restrictedAccess',\n        icon: 'list-right'\n    }\n]","export const connectorData = [\n    {\n        name: 'Database 1',\n        type: 'Data Lake Connector',\n        lastModified: '10/10/21',\n        restrictedAccess: 'Hidden',\n    },\n    {\n        name: 'Database 1',\n        type: 'Data Lake Connector',\n        lastModified: '10/10/21',\n        restrictedAccess: 'Hidden',\n    },\n    {\n        name: 'Database 1',\n        type: 'Data Lake Connector',\n        lastModified: '10/10/21',\n        restrictedAccess: 'Hidden',\n    },\n    {\n        name: 'Database 1',\n        type: 'Data Lake Connector',\n        lastModified: '10/10/21',\n        restrictedAccess: 'Hidden',\n    },\n    {\n        name: 'Database 1',\n        type: 'Data Lake Connector',\n        lastModified: '10/10/21',\n        restrictedAccess: 'Hidden',\n    },\n    {\n        name: 'Database 1',\n        type: 'Data Lake Connector',\n        lastModified: '10/10/21',\n        restrictedAccess: 'Hidden',\n    }\n]","import { Component, OnInit } from '@angular/core';\nimport { connectorCols } from './connector-cols';\nimport { connectorData } from './connector-data';\n\n@Component({\n  selector: 'app-connector-table',\n  templateUrl: './connector-table.component.html',\n  styleUrls: ['./connector-table.component.scss']\n})\nexport class ConnectorTableComponent implements OnInit {\n\n  public cols = connectorCols;\n  public data = connectorData; \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"table-container\">\n    <div class=\"table\">\n        <div class=\"table-column\">\n            <div class=\"column col-name\" *ngFor=\"let col of cols\">\n                <div class=\"flex justify-content-space-between\">\n                    {{col.colName}}\n                    <uvx-icon [icon]=\"col.icon\" size=\"xs\" class=\"margin-right-lg\"></uvx-icon>\n                </div>\n            </div>\n        </div>\n        <div class=\"table-row\" *ngFor=\"let item of data; index as i\">\n            <div class=\"row\">{{item.name}}</div>\n            <div class=\"row\">{{item.type}}</div>\n            <div class=\"row\">{{item.lastModified}}</div>\n            <div class=\"row\">{{item.restrictedAccess}}</div>\n        </div>\n    </div>\n    <!-- <div class=\"actions\">\n        <button>Back</button>\n        <button>Next</button>\n    </div> -->\n</div>","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { connectorCreatorSteps } from '../connector-creator/connector-creator-steps';\n\n@Component({\n  selector: 'app-settings-menu',\n  templateUrl: './settings-menu.component.html',\n  styleUrls: ['./settings-menu.component.scss']\n})\nexport class SettingsMenuComponent {\n\n  public settingsMenuIsExpanded = true;\n  public connectorCreatorSteps = connectorCreatorSteps;\n\n  @ViewChild('section') div:ElementRef;\n\n\n\n\n  public toggleSettingsMenu() {\n      this.settingsMenuIsExpanded = !this.settingsMenuIsExpanded;\n  }\n}\n","<uvx-expanding-menu \n    (toggleButtonClicked)=\"toggleSettingsMenu()\" \n    [menuIsExpanded]=\"settingsMenuIsExpanded\"\n    >\n    <div content>\n        <div *ngFor=\"let section of connectorCreatorSteps\">\n\n            <!-- <div *ngIf=\"!section.complete\"\n                yPosition \n                [topPosition]=\"section.yPos\" \n                [stylePos]=\"'absolute'\"\n                class=\"margin-bottom-md\" [attr.id]=\"section.name\">\n                <div class=\"flex align-items-center\" >\n                    <uvx-icon \n                    [icon]=\"section.complete ? 'check' : ''\" \n                    color=\"success\" class=\"margin-right-xs\"></uvx-icon>\n                    <p class=\"uv-body-sm bold\">{{section.sectionTitle}}</p>\n                </div>\n            </div>\n\n            <div *ngIf=\"!section.complete\">\n                <div class=\"flex align-items-center\"\n                    *ngFor=\"let step of section.steps\"\n                    yPosition \n                    [topPosition]=\"step.yPos\" \n                    [stylePos]=\"'absolute'\"\n                    [attr.id]=\"step.name\">\n                    <uvx-icon \n                    [icon]=\"step.complete ? 'check' : ''\" \n                    color=\"success\" class=\"margin-right-xs\"></uvx-icon>\n                    <p class=\"uv-body-sm\">{{step.title}}</p>\n                </div>\n            </div> -->\n\n\n            <div\n                class=\"margin-bottom-md\" [attr.id]=\"section.name\">\n            \n                <div class=\"flex align-items-center\" >\n                    <uvx-icon \n                    [icon]=\"section.complete ? 'check' : ''\" \n                    color=\"success\" class=\"margin-right-xs\"></uvx-icon>\n                    <p class=\"uv-body-sm bold\">{{section.sectionTitle}}</p>\n                </div>\n            \n                <div class=\"flex align-items-center\"\n                    *ngFor=\"let step of section.steps\" \n                    [attr.id]=\"step.name\">\n                    <uvx-icon \n                    [icon]=\"step.complete ? 'check' : ''\" \n                    color=\"success\" class=\"margin-right-xs\"></uvx-icon>\n                    <p class=\"uv-body-sm\">{{step.title}}</p>\n                </div>\n            </div>\n    \n        </div> \n\n    </div>\n</uvx-expanding-menu>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SettingsMenuComponent } from './settings-menu.component';\nimport { ExpandingMenuModule, UvxIconModule } from 'projects/uv-ui-lib/src/public-api';\nimport { PositionElementDirective } from '../../shared/position-element.directive';\n\n@NgModule({\n  declarations: [SettingsMenuComponent, PositionElementDirective],\n  imports: [\n    CommonModule,\n    ExpandingMenuModule,\n    UvxIconModule\n  ],\n  exports: [SettingsMenuComponent]\n})\nexport class SettingsMenuModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConnectorCreatorComponent } from './connector-creator/connector-creator.component';\nimport { ConnectorTableComponent } from './connector-table/connector-table.component';\nimport { SettingsComponent } from './settings.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingsComponent,\n        children: [\n            {\n                path: '',\n                redirectTo: 'connector-table',\n                pathMatch: 'full'\n            },\n            {\n                path: 'connector-creator',\n                component: ConnectorCreatorComponent\n            },\n            {\n                path: 'connector-table',\n                component: ConnectorTableComponent\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { settingsNavlinks } from '../settingsNavLinks';\n\n@Component({\n  selector: 'app-settings-sub-navbar',\n  templateUrl: './settings-sub-navbar.component.html',\n  styleUrls: ['./settings-sub-navbar.component.scss']\n})\nexport class SettingsSubNavbarComponent {\n\n  @Input() subNavbarIsExpanded = false;\n  settingsNavlinks = settingsNavlinks;\n\n  public toggleSubNavbar() {\n    this.subNavbarIsExpanded = !this.subNavbarIsExpanded;\n  }\n\n}\n","<uvx-navbar-sub [withPadding]=\"true\" [isExpanded]=\"subNavbarIsExpanded\" (toggleButtonClicked)=\"toggleSubNavbar()\">\n    <div *ngIf=\"subNavbarIsExpanded\">\n        <div\n            *ngFor=\"let navlink of settingsNavlinks\"\n            class=\"nav-icon\"\n            [matTooltip]=\"navlink.tooltip\"\n            [class.nav-icon-active-expanded]=\"subNavbarIsExpanded\"\n            [class.nav-icon-disabled]=\"navlink.disabled\"\n        >\n            <a [routerLink]=\"navlink.navlink\" class=\"display-inline-block\" [queryParams]=\"{ app: navlink.app }\">\n                <uvx-icon color=\"black\" [icon]=\"navlink.icon\"></uvx-icon>\n                <p\n                    [class.navbar-expanded-text-visible]=\"subNavbarIsExpanded\"\n                    class=\"display-inline-block margin-left-xxs navbar-expanded-text\"\n                >\n                    {{ navlink.tooltip }}\n                </p>\n            </a>\n        </div>\n    </div>\n</uvx-navbar-sub>\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { AppShellService } from '../services/app-shell.service';\nimport { NgOnDestroyService } from '../services/on-destroy.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SettingsComponent implements OnInit {\n\n    public currentApp = '';\n    public currentService = '';\n\n    constructor(\n      private appShellService: AppShellService, \n      private destroy$: NgOnDestroyService,\n      private ref: ChangeDetectorRef,\n      private route: ActivatedRoute) {\n    }\n\n    public get isCreateConnector(): boolean {\n      return this.currentService === 'connector-creator';\n    }\n\n    public ngOnInit(): void {\n        this.appShellService.setTitle('Settings');\n        this.appShellService.setHeaderIcon('settings');\n        this.appShellService.setNavIcon('settings');\n        this.route.queryParams.pipe(tap(\n          params => {\n              this.currentApp =  params['app'];\n              this.currentService = params['service'];\n          }\n      ))\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.ref.detectChanges());\n    }\n\n    public launchDataLakeConnectorCreator() {\n      \n    }\n}\n","<div class=\"row\">\n    <uvx-action-bar class=\"w-100\">\n        <div left class=\"flex margin-top-xs margin-bottom-xs\">\n            <div *ngIf=\"isCreateConnector\" class=\"flex align-items-center\">\n                <uvx-icon icon=\"datalake\" class=\"margin-right-xs\"></uvx-icon>\n                <h4>New Data Lake Connector</h4>\n            </div>\n        </div>\n        <div right class=\"flex margin-top-xs margin-bottom-xs\">\n            <!-- <epd-pl-button-dropdown \n            *ngIf=\"!isCreateConnector\"\n                [disabled]=\"false\" \n                contentText=\"Create\" \n                color=\"primary\" \n                [disableRipple]=\"true\"> \n                <ng-template epdPlButtonIconTmp>\n                    <uvx-icon color=\"white\" class=\"margin-right-xxs\" icon=\"store\"></uvx-icon>\n                </ng-template>\n                <ng-template epdPlButtonDropdownItemTmp>\n                    <div epd-pl-button-dropdown-item \n                    [routerLink]=\"['connector-creator']\"\n                    [queryParams]=\"{app: 'settings', service: 'connector-creator'}\"\n                    (click)=\"launchDataLakeConnectorCreator()\">\n                    <uvx-icon icon=\"datalake\"></uvx-icon>\n                        Data Lake Connector\n                    </div>\n                    <div epd-pl-button-dropdown-item>\n                        <uvx-icon icon=\"windchill\"></uvx-icon>Windchill</div>\n                </ng-template>\n            </epd-pl-button-dropdown> -->\n        </div>\n    </uvx-action-bar>\n</div>\n\n<div class=\"router-container\">\n    <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SettingsComponent } from './settings.component';\nimport { ConnectorTableComponent } from './connector-table/connector-table.component';\nimport { ActionBarModule, ButtonModule, DropdownModule, ExpandingMenuModule, IconButtonModule, NavbarSubModule, TextInputModule, TooltipModule, UvxIconModule } from 'projects/uv-ui-lib/src/public-api';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsMenuModule } from './settings-menu/settings-menu.module';\nimport { ConnectorCreatorComponent } from './connector-creator/connector-creator.component';\nimport { PositionElementDirective } from '../shared/position-element.directive';\nimport { ConnectorCreatorService } from '../services/connector-creator.service';\nimport { SettingsSubNavbarComponent } from './settings-sub-navbar/settings-sub-navbar.component';\n\n@NgModule({\n  declarations: [\n    SettingsComponent, \n    ConnectorTableComponent,\n    ConnectorCreatorComponent,\n    SettingsSubNavbarComponent\n  ],\n  imports: [\n    CommonModule,\n    ButtonModule,\n    DropdownModule,\n    IconButtonModule,\n    SettingsRoutingModule,\n    UvxIconModule,\n    TextInputModule,\n    ActionBarModule,\n    TooltipModule,\n    SettingsMenuModule,\n    ExpandingMenuModule,\n    NavbarSubModule\n  ],\n  // providers: [\n  //   ConnectorCreatorService\n  // ],\n  exports: [SettingsComponent, SettingsSubNavbarComponent]\n})\nexport class SettingsModule { }\n","import { AfterViewChecked, AfterViewInit, Directive, ElementRef, HostBinding, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[yPosition]'\n})\nexport class PositionElementDirective {\n\n  @Input() topPosition: number;\n  @Input() stylePos = 'relative'\n\n  constructor(private el: ElementRef) { \n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewChecked(): void {\n      this.el.nativeElement.style.position = this.stylePos;\n      this.el.nativeElement.style.top = `${this.topPosition}px`;\n  //   console.log(\n  //     this.el.nativeElement.id, '\\n',\n  //     this.topPosition, '\\n',\n  //     this.el.nativeElement.style.top, '\\n',\n  //     this.el.nativeElement.offsetTop);\n  }\n}\n"],"names":["connectorCreatorSteps","sectionTitle","name","required","complete","yPos","steps","title","selection","type","options","i0","ɵɵelementStart","ɵɵlistener","ConnectorCreatorComponent_div_1_div_6_div_2_Template_uvx_text_input_keyup_1_listener","$event","ɵɵrestoreView","_r10","step_r4","ɵɵnextContext","$implicit","section_r1","ctx_r8","ɵɵresetView","enterFormInputSelection","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ConnectorCreatorComponent_div_1_div_6_div_3_span_4_Template_span_click_0_listener","restoredCtx","_r17","option_r14","ctx_r15","selectFormDropdownOption","ɵɵtext","ɵɵtextInterpolate1","ɵɵtemplate","ConnectorCreatorComponent_div_1_div_6_div_3_span_4_Template","ɵɵtextInterpolate","ConnectorCreatorComponent_div_1_div_6_div_2_Template","ConnectorCreatorComponent_div_1_div_6_div_3_Template","ɵɵattribute","ConnectorCreatorComponent_div_1_div_6_Template","ctx_r0","formSectionYPos","ConnectorCreatorComponent","getYPos","el","elRef","nativeElement","querySelector","offsetTop","setYPos","sectionElements","formSections","stepElements","formSteps","sections","forEach","map","section","id","step","event","target","value","length","checkIfSectionComplete","option","result","every","constructor","ngOnInit","ngAfterViewChecked","ɵɵdirectiveInject","ElementRef","selectors","viewQuery","ConnectorCreatorComponent_Query","rf","ctx","ConnectorCreatorComponent_div_1_Template","ɵɵelement","connectorCols","colName","fieldName","icon","connectorData","lastModified","restrictedAccess","col_r2","item_r3","ConnectorTableComponent","cols","data","decls","vars","consts","template","ConnectorTableComponent_Template","ConnectorTableComponent_div_3_Template","ConnectorTableComponent_div_4_Template","step_r3","SettingsMenuComponent_div_2_div_6_Template","SettingsMenuComponent","settingsMenuIsExpanded","toggleSettingsMenu","SettingsMenuComponent_Query","SettingsMenuComponent_Template_uvx_expanding_menu_toggleButtonClicked_0_listener","SettingsMenuComponent_div_2_Template","CommonModule","ExpandingMenuModule","UvxIconModule","PositionElementDirective","SettingsMenuModule","declarations","imports","exports","RouterModule","SettingsComponent","routes","path","component","children","redirectTo","pathMatch","SettingsRoutingModule","forChild","i1","settingsNavlinks","ɵɵclassProp","ctx_r1","subNavbarIsExpanded","navlink_r2","disabled","tooltip","navlink","ɵɵpureFunction1","_c0","app","SettingsSubNavbarComponent_div_1_div_1_Template","SettingsSubNavbarComponent","toggleSubNavbar","inputs","SettingsSubNavbarComponent_Template","SettingsSubNavbarComponent_Template_uvx_navbar_sub_toggleButtonClicked_0_listener","SettingsSubNavbarComponent_div_1_Template","takeUntil","tap","appShellService","destroy$","ref","route","currentApp","currentService","isCreateConnector","setTitle","setHeaderIcon","setNavIcon","queryParams","pipe","params","subscribe","detectChanges","launchDataLakeConnectorCreator","AppShellService","i2","NgOnDestroyService","ChangeDetectorRef","i3","ActivatedRoute","SettingsComponent_Template","SettingsComponent_div_3_Template","ActionBarModule","ButtonModule","DropdownModule","IconButtonModule","NavbarSubModule","TextInputModule","TooltipModule","SettingsModule","stylePos","style","position","top","topPosition"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}