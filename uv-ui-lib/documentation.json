{
    "pipes": [
        {
            "name": "FilterResultsPipe",
            "id": "pipe-FilterResultsPipe-c71f3f11a9a6530528a0c8633764b259",
            "file": "projects/uv-ui-prototype/src/app/search/search-results/filter-results.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "items",
                            "type": "SearchResult[]"
                        },
                        {
                            "name": "filter",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "SearchResult[]",
                    "typeParameters": [],
                    "line": 6,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "SearchResult[]",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filter",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filterResults",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { SearchResult } from '../models/search-result.model';\r\n\r\n@Pipe({name: 'filterResults'})\r\nexport class FilterResultsPipe implements PipeTransform {\r\n  public transform(items: SearchResult[], filter: string): SearchResult[] {\r\n      return items.filter(item => item.category === filter);\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "IDropdown",
            "id": "interface-IDropdown-8c241063812158171275031b06e74ed7",
            "file": "projects/uv-ui-lib/src/lib/interfaces/dropdown-button.interfaces.ts",
            "type": "interface",
            "sourceCode": "export interface IDropdown{\r\n    name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "INav",
            "id": "interface-INav-b458688ba38cec31055d4425be26aac4",
            "file": "projects/uv-ui-lib/src/lib/interfaces/navbar.interfaces.ts",
            "type": "interface",
            "sourceCode": "export interface INav {\r\n    icon: string;\r\n    navlink: string;\r\n    classes: string[];\r\n  }\r\n",
            "properties": [
                {
                    "name": "classes",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "navlink",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "INavBarSub",
            "id": "interface-INavBarSub-428ee98b6e7cb19fa6d9f1bd7a68e03a",
            "file": "projects/uv-ui-lib/src/lib/interfaces/navbar-sub.interfaces.ts",
            "type": "interface",
            "sourceCode": "export interface INavBarSub {\r\n    icon: string;\r\n    snippetHeading: string;\r\n    snippetTxt: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "snippetHeading",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "snippetTxt",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ITask",
            "id": "interface-ITask-47f4f7417d015bedd771392e2699ee5a",
            "file": "projects/uv-ui-lib/src/lib/interfaces/side-by-side.interfaces.ts",
            "type": "interface",
            "sourceCode": "export interface ITask{\r\n    started: string;\r\n    link: string;\r\n    title: string;\r\n    description: string;\r\n    date: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "date",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "link",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "started",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "MenuTab",
            "id": "interface-MenuTab-d71f9c8490b307cafd6d48d027377b48",
            "file": "projects/uv-ui-prototype/src/app/search/models/menu-tab.model.ts",
            "type": "interface",
            "sourceCode": "export interface MenuTab {\r\n    icon: string;\r\n    routeUri: string;\r\n    title: string;\r\n    selected: boolean;\r\n    category: string;\r\n    entitySearchCount: number;\r\n    showEntitySearchCount: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "category",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "entitySearchCount",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "icon",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "routeUri",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "selected",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "showEntitySearchCount",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "SearchResultsSideMenuState",
            "id": "interface-SearchResultsSideMenuState-3e4bd1cb542438ecff944fe2e3c2084b",
            "file": "projects/uv-ui-prototype/src/app/search/models/search-results-state.ts",
            "type": "interface",
            "sourceCode": "import { MenuTab } from './menu-tab.model';\r\n\r\nexport interface SearchResultsSideMenuState {\r\n  menuTabs: MenuTab[];\r\n  resultsFound: boolean;\r\n  totalCount?: number;\r\n}\r\n\r\nexport const DEFAULT_SEARCH_MENU_STATE: SearchResultsSideMenuState = {\r\n    resultsFound: false,\r\n    totalCount: 0,\r\n    menuTabs:  [\r\n      {\r\n        icon: 'assets/parts.svg#parts',\r\n        routeUri: 'landing',\r\n        title: 'Parts',\r\n        selected: false,\r\n        category: 'Parts',\r\n        entitySearchCount: 230,\r\n        showEntitySearchCount: true\r\n      },\r\n      {\r\n        icon: 'assets/document.svg#document',\r\n        routeUri: 'search-results',\r\n        title: 'Requirements',\r\n        selected: false,\r\n        category: 'Requirements',\r\n        entitySearchCount: 160,\r\n        showEntitySearchCount: true\r\n      },\r\n      {\r\n        icon: 'assets/apps-sbs.svg#sideBySide',\r\n        routeUri: 'search-results',\r\n        title: 'Documents   ',\r\n        selected: false,\r\n        category: 'Documents',\r\n        entitySearchCount: 210,\r\n        showEntitySearchCount: true\r\n      },\r\n      {\r\n        icon: 'assets/clock.svg#clock',\r\n        routeUri: 'search-results',\r\n        title: 'Recent Searches',\r\n        selected: false,\r\n        category: 'Recent',\r\n        entitySearchCount: 0,\r\n        showEntitySearchCount: true\r\n      }\r\n    ]\r\n};\r\n",
            "properties": [
                {
                    "name": "menuTabs",
                    "type": "MenuTab[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "resultsFound",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "totalCount",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-b075515a1d61a3af0d6a849bca253f3a",
            "file": "projects/uv-ui-prototype/src/app/services/auth.service.ts",
            "properties": [
                {
                    "name": "settings",
                    "defaultValue": "{\r\n        authority: 'https://gwu.auth.us-east-1.amazoncognito.com',\r\n        // TODO: These values will be based on the subdomain\r\n        clientId: '2fakcqk6ihkmk78h8h0o7vs0bq',\r\n        // redirectUri: 'https://uvuiprototype.z13.web.core.windows.net/auth-callback',\r\n        redirectUri: 'http://localhost:4200/auth-callback'\r\n    }",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getGroups",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 115,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "getJWT",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 133,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "getPrincipalID",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 120,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "getToken",
                    "args": [
                        {
                            "name": "code",
                            "type": "string | null"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<object>",
                    "typeParameters": [],
                    "line": 70,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string | null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserEmail",
                    "args": [
                        {
                            "name": "jwt",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 107,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "jwt",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserInfo",
                    "args": [
                        {
                            "name": "jwt",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 84,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "jwt",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isJwtValid",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 125,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isValidState",
                    "args": [
                        {
                            "name": "state",
                            "type": "string | null"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 57,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "string | null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "startAuthentication",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HelperService } from '../services/helper.service';\r\n\r\n@Injectable({\r\nprovidedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    // TODO: get this info from pipeline eventually\r\n    private settings: {authority: string; clientId: string; redirectUri: string} = {\r\n        authority: 'https://gwu.auth.us-east-1.amazoncognito.com',\r\n        // TODO: These values will be based on the subdomain\r\n        clientId: '2fakcqk6ihkmk78h8h0o7vs0bq',\r\n        // redirectUri: 'https://uvuiprototype.z13.web.core.windows.net/auth-callback',\r\n        redirectUri: 'http://localhost:4200/auth-callback'\r\n    };\r\n    constructor(private http: HttpClient, private helper: HelperService) {}\r\n\r\n    public isLoggedIn(): boolean {\r\n        const jwt = localStorage.getItem('id_token');\r\n        if (jwt) {\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public startAuthentication(): void {\r\n        // Create random \"state\"\r\n        const state = this.helper.getRandomString();\r\n        sessionStorage.setItem('pkce_state', state);\r\n\r\n        // Create PKCE code verifier\r\n        const codeVerifier = this.helper.getRandomString();\r\n        sessionStorage.setItem('codeVerifier', codeVerifier);\r\n        console.log(`codeVerifier: ${codeVerifier}`);\r\n        this.helper.encryptStringWithSHA256(codeVerifier).then(arrayHash => {\r\n            const codeChallenge = this.helper.hashToBase64url(arrayHash);\r\n            sessionStorage.setItem('codeChallenge', codeChallenge);\r\n            console.log(`codeChallenge: ${codeChallenge}`);\r\n            this.helper.navigateToUrl(\r\n                `${this.settings.authority}/oauth2/authorize?response_type=code&client_id=${this.settings.clientId}&redirect_uri=${this.settings.redirectUri}&code_challenge_method=S256&code_challenge=${codeChallenge}&state=${state}`\r\n            );\r\n        });\r\n    }\r\n\r\n    public logout(): void {\r\n        localStorage.clear();\r\n        this.helper.navigateToUrl(\r\n            `${this.settings.authority}/logout?client_id=${this.settings.clientId}&logout_uri=http://localhost:4200/logout`\r\n            // `${this.settings.authority}/logout?client_id=${this.settings.clientId}&logout_uri=https://uvuiprototype.z13.web.core.windows.net/logout`\r\n        );\r\n    }\r\n\r\n    public isValidState(state: string | null): boolean {\r\n        // Verify state matches\r\n        const sentState = sessionStorage.getItem('pkce_state');\r\n        if(sentState !== state) {\r\n            console.log(`State is invalid.\\nReceived state: ${state}\\nSent state: ${sentState}`);\r\n\r\n            return false;\r\n        } else {\r\n            \r\n            return true;\r\n        }\r\n    }\r\n\r\n    public getToken(code: string | null): Observable<object> {\r\n        // Fetch OAuth2 tokens from Cognito\r\n        const codeVerifier = sessionStorage.getItem('codeVerifier');\r\n        const headers: HttpHeaders = new HttpHeaders()\r\n            .set('Content-Type', 'application/x-www-form-urlencoded'\r\n        );\r\n\r\n        return this.http.post(\r\n            `${this.settings.authority}/oauth2/token?grant_type=authorization_code&code=${code}&client_id=${this.settings.clientId}&redirect_uri=${this.settings.redirectUri}&code_verifier=${codeVerifier}`,\r\n            {},\r\n            { headers }\r\n        );\r\n    }\r\n\r\n    public getUserInfo(jwt: string): Observable<boolean> {\r\n        console.log('get user info', jwt);\r\n\r\n        return new Observable((subscriber) => {\r\n            try {\r\n                const jwtData: any = JSON.parse(atob(jwt.split('.')[1]));\r\n                localStorage.setItem('userName', jwtData.name);\r\n                localStorage.setItem('principal', jwtData['custom:principal_id']);\r\n                localStorage.setItem('groups', jwtData['custom:groups']);\r\n                localStorage.setItem(\r\n                    'userName',\r\n                    jwtData.identities[0].userId.split('@')[0]\r\n                );\r\n                localStorage.setItem('jwtExp', jwtData.exp);\r\n                subscriber.next(true);\r\n                subscriber.complete();\r\n            } catch (err) {\r\n                subscriber.next(false);\r\n                subscriber.complete();\r\n            }\r\n        });\r\n    }\r\n\r\n    public getUserEmail(jwt: string): string {\r\n        const jwtData: any = JSON.parse(atob(jwt.split('.')[1]));\r\n        const email = jwtData.identities[0].userId;\r\n        localStorage.setItem('userEmail', email);\r\n\r\n        return email;\r\n    }\r\n\r\n    public getGroups(): string {\r\n\r\n        return localStorage.getItem('groups') || '{}';\r\n    }\r\n\r\n    public getPrincipalID(): string {\r\n\r\n        return localStorage.getItem('principal') || '{}';\r\n    }\r\n\r\n    public isJwtValid(): boolean {\r\n        const expDate = new Date(0);\r\n        expDate.setUTCMilliseconds(+localStorage.getItem('jwtExp')! * 1000);\r\n        const today = new Date();\r\n\r\n        return expDate >= today ? true : false;\r\n    }\r\n\r\n    public getJWT(): string {\r\n\r\n        return 'Bearer ' + localStorage.getItem('id_token');\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    },
                    {
                        "name": "helper",
                        "type": "HelperService"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "helper",
                        "type": "HelperService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HeaderService",
            "id": "injectable-HeaderService-d76e7d802197cbe2ce3c03c7da8e0741",
            "file": "projects/uv-ui-prototype/src/app/services/header.service.ts",
            "properties": [
                {
                    "name": "appIcon",
                    "defaultValue": "new BehaviorSubject<string>('assets/apps-quad.svg#dashboard')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "new BehaviorSubject<string>('Title')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "setAppIcon",
                    "args": [
                        {
                            "name": "appIcon",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "appIcon",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTitle",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HeaderService {\r\n    public title = new BehaviorSubject<string>('Title');\r\n    public appIcon = new BehaviorSubject<string>('assets/apps-quad.svg#dashboard');\r\n\r\n    public get currentTitle$(): Observable<string> {\r\n        return this.title.asObservable();\r\n    }\r\n\r\n    public get currentIcon$(): Observable<string> {\r\n        return this.appIcon.asObservable();\r\n    }\r\n\r\n    public setTitle(title: string): void {\r\n        this.title.next(title);\r\n    }\r\n\r\n    public setAppIcon(appIcon: string): void {\r\n        this.appIcon.next(appIcon);\r\n    }\r\n}\r\n",
            "accessors": {
                "currentTitle$": {
                    "name": "currentTitle$",
                    "getSignature": {
                        "name": "currentTitle$",
                        "type": "",
                        "returnType": "Observable<string>",
                        "line": 11
                    }
                },
                "currentIcon$": {
                    "name": "currentIcon$",
                    "getSignature": {
                        "name": "currentIcon$",
                        "type": "",
                        "returnType": "Observable<string>",
                        "line": 15
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "HelperService",
            "id": "injectable-HelperService-a9f6e293efa6966d56ef9ef1b3163e05",
            "file": "projects/uv-ui-prototype/src/app/services/helper.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "encryptStringWithSHA256",
                    "args": [
                        {
                            "name": "str",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRandomString",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hashToBase64url",
                    "args": [
                        {
                            "name": "arrayBuffer",
                            "type": "ArrayBuffer"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "arrayBuffer",
                            "type": "ArrayBuffer",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigateToUrl",
                    "args": [
                        {
                            "name": "url",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HelperService {\r\n  /* istanbul ignore next */\r\n  public navigateToUrl(url: string): void {\r\n    window.location.href = url;\r\n  }\r\n\r\n  // Generate a Random String\r\n  public getRandomString(): string {\r\n    const randomItems = new Uint32Array(28);\r\n    const binaryStringItems: string[] = [];\r\n    crypto.getRandomValues(randomItems);\r\n    randomItems.map(dec => binaryStringItems.push(`0${dec.toString(16).substr(-2)}`));\r\n    console.log(`binaryStringItems: ${binaryStringItems}`);\r\n\r\n    return binaryStringItems.reduce((acc, item) => `${acc}${item}`, '');\r\n  }\r\n\r\n  // Encrypt a String with SHA256\r\n  public encryptStringWithSHA256(str: string) {\r\n    const PROTOCOL = 'SHA-256';\r\n    const textEncoder = new TextEncoder();\r\n    const encodedData = textEncoder.encode(str);\r\n    console.log(`Encoded data: ${encodedData}`);\r\n\r\n    return crypto.subtle.digest(PROTOCOL, encodedData);\r\n  }\r\n\r\n  // Convert Hash to Base64-URL\r\n  public hashToBase64url(arrayBuffer: ArrayBuffer): string {\r\n    const items = new Uint8Array(arrayBuffer);\r\n    const stringifiedArrayHash = items.reduce((acc, i) => `${acc}${String.fromCharCode(i)}`, '');\r\n    console.log(`stringifiedArrayHash = ${stringifiedArrayHash}`);\r\n    const decodedHash = btoa(stringifiedArrayHash);\r\n    const base64URL = decodedHash.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\r\n\r\n    return base64URL;\r\n  }\r\n}\r\n",
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-6e1ba91687745452b09ef4b346ddf677",
            "file": "projects/uv-ui-prototype/e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  public async navigateTo(): Promise<unknown> {\r\n    return browser.get(browser.baseUrl);\r\n  }\r\n\r\n  public async getTitleText(): Promise<string> {\r\n    return element(by.css('app-root .content span')).getText();\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        114,
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        114,
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SearchResult",
            "id": "class-SearchResult-e37965f649372e2bb4b87ac68a0b47d2",
            "file": "projects/uv-ui-prototype/src/app/search/models/search-result.model.ts",
            "type": "class",
            "sourceCode": "export class SearchResult {\r\n    public category: string;\r\n    public title: string;\r\n    public description: string;\r\n\r\n    constructor(category: string, title: string, desc: string) {\r\n        this.category = category;\r\n        this.title = title;\r\n        this.description = desc;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "category",
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "type": "string"
                    },
                    {
                        "name": "desc",
                        "type": "string"
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "category",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "desc",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "category",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SearchService",
            "id": "class-SearchService-f844131e2c2445f5571338832e73d30f",
            "file": "projects/uv-ui-prototype/src/app/services/search.service.ts",
            "type": "class",
            "sourceCode": "import { SearchResult } from '../search/models/search-result.model';\r\nimport { allSearchResults } from '../search/search-results/sample-search-results/allSearchResults';\r\n\r\nexport class SearchService {\r\n    public allSearchResults: SearchResult[] = allSearchResults;\r\n\r\n    public getAllSearchResults(): SearchResult[]{\r\n        return this.allSearchResults.slice();\r\n    }\r\n}\r\n",
            "properties": [
                {
                    "name": "allSearchResults",
                    "defaultValue": "allSearchResults",
                    "type": "SearchResult[]",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAllSearchResults",
                    "args": [],
                    "optional": false,
                    "returnType": "SearchResult[]",
                    "typeParameters": [],
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppBarComponent",
            "id": "component-AppBarComponent-8ae1c906a5a5bb66a38afdd1b01f0074",
            "file": "projects/uv-ui-lib/src/lib/app-bar/app-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-app-bar",
            "styleUrls": [
                "./app-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'lib-uv-ui-app-bar',\r\n    templateUrl: './app-bar.component.html',\r\n    styleUrls: ['./app-bar.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppBarComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n\r\n.app-bar {\r\n    height: 100%;\r\n    width: 100%;\r\n    border-left: none;\r\n    border-top: none;\r\n    z-index: 0;\r\n}\r\n\r\n.tags-container {\r\n    align-self: flex-start;\r\n    position: relative;\r\n    width: 60%;\r\n    height: 100%;\r\n}\r\n\r\n.container-right {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n    margin-right: $md-size;\r\n}\r\n",
                    "styleUrl": "./app-bar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-bar box flex-inline flex-row justify-content-space-between\">\r\n\r\n    <div class=\"tags-container\"></div>\r\n\r\n<div class=\"container-right\">\r\n\r\n    <ng-content select=\"[right]\"></ng-content>\r\n\r\n</div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-60ad2892f6f153bfb91e4a0f9356de0f",
            "file": "projects/uv-ui-prototype/src/app/app.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppComponent {\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "AppSideBarComponent",
            "id": "component-AppSideBarComponent-0c33cd0cf41a109d2010b434b9ce2b48",
            "file": "projects/uv-ui-lib/src/lib/app-side-bar/app-side-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-app-side-bar",
            "styleUrls": [
                "./app-side-bar-component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app-side-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'lib-uv-ui-app-side-bar',\r\n    templateUrl: './app-side-bar.component.html',\r\n    styleUrls: ['./app-side-bar-component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppSideBarComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n\r\n.app-side-bar {\r\n    height: 100%;\r\n    border-left: none;\r\n    border-top: none;\r\n\r\n    &__top-content {\r\n        padding: 24px;\r\n        min-height: 150px;\r\n    }\r\n\r\n    &__bottom-content {\r\n        padding: 12px 0 0 0;\r\n        max-height: calc(100% - 150px);\r\n        // border:3px solid orange;\r\n        overflow: auto;\r\n    }\r\n}\r\n",
                    "styleUrl": "./app-side-bar-component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"box app-side-bar\">\r\n\r\n    <div class=\"app-side-bar__top-content\">\r\n        <ng-content select=\"[top]\"></ng-content> \r\n    </div>\r\n\r\n    <div class=\"divider\"></div>\r\n\r\n    <div class=\"app-side-bar__bottom-content\">\r\n        <ng-content select=\"[bottom]\"></ng-content>\r\n    </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "AuthGuardComponent",
            "id": "component-AuthGuardComponent-c68abaf6bc731db7cbe27fc80c9bba82",
            "file": "projects/uv-ui-prototype/src/app/layouts/auth-guard/auth-guard.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-guard",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-guard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getCode",
                    "args": [
                        {
                            "name": "queryParams",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "queryParams",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'app-auth-guard',\r\n  templateUrl: './auth-guard.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AuthGuardComponent implements OnInit {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private helper: HelperService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.getCode(window.location.search);\r\n  }\r\n\r\n  public getCode(queryParams: string): void {\r\n    const params = new URLSearchParams(queryParams);\r\n    if (params.has('code') && params.has('state') && this.authService.isValidState(params.get('state'))) {\r\n      this.authService\r\n        .getToken(params.get('code'))\r\n        .subscribe((data: any) => {\r\n          localStorage.setItem('id_token', data.id_token);\r\n          localStorage.setItem('access_token', data.access_token);\r\n          localStorage.setItem('refresh_token', data.refresh_token);\r\n          this.authService.getUserInfo(data.id_token).subscribe((res) => {\r\n            if (res) {\r\n                console.log('res', res);\r\n              localStorage.setItem('userData', JSON.stringify(res));\r\n                this.helper.navigateToUrl('/login');\r\n            } else {\r\n              // bad JWT\r\n              this.authService.logout();\r\n            }\r\n          });\r\n        });\r\n    } else {\r\n      this.authService.logout();\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService"
                    },
                    {
                        "name": "helper",
                        "type": "HelperService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "helper",
                        "type": "HelperService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n    <div>\r\n        <span>Loading...</span>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-208ba4783958d494b67c1c202dd471fc",
            "file": "projects/uv-ui-lib/src/lib/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonText",
                    "defaultValue": "'Button'",
                    "line": 10
                },
                {
                    "name": "type",
                    "defaultValue": "'btn'",
                    "line": 11,
                    "type": "\"btn\" | \"btn-login\" | \"btn-chip\" | \"btn-blue\" | \"btn-round\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cssClasses",
                    "defaultValue": "['btn']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getCssClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'lib-uv-ui-button',\r\n    templateUrl: './button.component.html',\r\n    styleUrls: ['./button.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n    @Input() public buttonText = 'Button';\r\n    @Input() public type: 'btn' | 'btn-login' | 'btn-chip' | 'btn-blue' | 'btn-round' = 'btn';\r\n\r\n    public cssClasses = ['btn'];\r\n\r\n    public getCssClasses(): void {\r\n        this.cssClasses.push(this.type);\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.getCssClasses();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n\r\n.btn {\r\n    &,\r\n    &:link,\r\n    &:visited {\r\n        font-family: $font-family;\r\n        font-weight: $font-bold;\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        border-radius: 8px;\r\n        border: none;\r\n        cursor: pointer;\r\n        background-color: transparent;\r\n    }\r\n\r\n    &:active,\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n}\r\n\r\n.btn-login {\r\n    margin:25px;\r\n    padding: 12px;\r\n    width: 320px;\r\n    height: 48px;\r\n    border: $border-gray-light;\r\n}\r\n\r\n.btn-chip {\r\n    color: $color-orange;\r\n    font-weight: bold;\r\n    letter-spacing: 0.2px;\r\n    line-height: 16px;\r\n    padding: 8px 13px;\r\n    border: $border-gray-light;\r\n}\r\n\r\n.btn-round {\r\n    width: 41px;\r\n    height: 41px;\r\n    padding: 10.5px;\r\n    border-radius: 100%;\r\n    border: $border-gray-light;\r\n\r\n    &-large{\r\n        width: 57px;\r\n        height: 57px;\r\n        color: $color-blue;\r\n        font-weight: bold;\r\n        font-size: 24px;\r\n        text-align:center;\r\n    }\r\n}\r\n\r\n.btn-add-task {\r\n    color: $color-blue;\r\n    font-size: 18px;\r\n    padding: 6px;\r\n    border: $border-gray-light;\r\n}\r\n\r\n.btn-blue {\r\n    color: $color-blue;\r\n    line-height: 20px;\r\n    font-family: $font-family-bold;\r\n    font-weight: $font-bold;\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button \r\n    [ngClass]=\"cssClasses\" >\r\n    {{buttonText}}\r\n</button>\r\n\r\n\r\n"
        },
        {
            "name": "DropdownButtonComponent",
            "id": "component-DropdownButtonComponent-fe1bf330a2c139cdac5a18ee85a7ac09",
            "file": "projects/uv-ui-lib/src/lib/dropdown-button/dropdown-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-dropdown-button",
            "styleUrls": [
                "./dropdown-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dropdownName",
                    "defaultValue": "''",
                    "line": 12
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "line": 13,
                    "type": "IDropdown[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "trackByFn",
                    "args": [
                        {
                            "name": "_",
                            "type": "number"
                        },
                        {
                            "type": "IDropdown"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 15,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "IDropdown",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { IDropdown } from '../interfaces/dropdown-button.interfaces';\r\n\r\n@Component({\r\n    selector: 'lib-uv-ui-dropdown-button',\r\n    templateUrl: './dropdown-button.component.html',\r\n    styleUrls: ['./dropdown-button.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DropdownButtonComponent {\r\n\r\n    @Input() public dropdownName = '';\r\n    @Input() public items: IDropdown[] = [];\r\n\r\n    public trackByFn(_: number, {name}: IDropdown): string {\r\n        return name;\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/styles';\r\n\r\n.btn-dropdown {\r\n    padding: 10px 16px;\r\n    font-weight: bold;\r\n    border: $border-gray-light;\r\n}\r\n",
                    "styleUrl": "./dropdown-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<select class=\"btn btn-dropdown\" [name]=\"dropdownName\">\r\n    <option selected hidden>{{dropdownName}}</option>\r\n    <option *ngFor=\"let item of items trackBy: trackByFn\">\r\n        {{item.name}}\r\n    </option>\r\n</select>\r\n"
        },
        {
            "name": "GlobalWhereUsedComponent",
            "id": "component-GlobalWhereUsedComponent-0d9ff6339eb3fccb833ea49de8db78a4",
            "file": "projects/uv-ui-prototype/src/app/global-where-used/global-where-used.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "prototype-uv-ui-global-where-used",
            "styleUrls": [
                "./global-where-used.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./global-where-used.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "gwuTabs",
                    "defaultValue": "[\r\n        {\r\n            icon: 'assets/more-horizontal.svg#moreHorizontal',\r\n            link: '/',\r\n            linkText: 'Link',\r\n            results: ''\r\n        },\r\n        {\r\n            icon: 'assets/more-horizontal.svg#moreHorizontal',\r\n            link: '/',\r\n            linkText: 'Link',\r\n            results: ''\r\n        },\r\n        {\r\n            icon: 'assets/more-horizontal.svg#moreHorizontal',\r\n            link: '/',\r\n            linkText: 'Link',\r\n            results: ''\r\n        }\r\n    ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { HeaderService } from '../services/header.service';\r\n\r\n@Component({\r\n  selector: 'prototype-uv-ui-global-where-used',\r\n  templateUrl: './global-where-used.component.html',\r\n  styleUrls: ['./global-where-used.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GlobalWhereUsedComponent implements OnInit{\r\n\r\n    public gwuTabs = [\r\n        {\r\n            icon: 'assets/more-horizontal.svg#moreHorizontal',\r\n            link: '/',\r\n            linkText: 'Link',\r\n            results: ''\r\n        },\r\n        {\r\n            icon: 'assets/more-horizontal.svg#moreHorizontal',\r\n            link: '/',\r\n            linkText: 'Link',\r\n            results: ''\r\n        },\r\n        {\r\n            icon: 'assets/more-horizontal.svg#moreHorizontal',\r\n            link: '/',\r\n            linkText: 'Link',\r\n            results: ''\r\n        }\r\n    ];\r\n\r\n    constructor(private headerService: HeaderService){}\r\n\r\n    public ngOnInit(): void {\r\n        this.headerService.setTitle('Global Where Used');\r\n        this.headerService.setAppIcon('assets/apps-gwu.svg#inspect');\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grid{\r\n    position: relative;\r\n    height: 100vh;\r\n    display: grid;\r\n    grid-gap: 0;\r\n    grid-template-columns: [col1] 336px [col2] auto;\r\n    grid-template-rows: [row1] 68px [row2] auto;\r\n    grid-template-areas: \r\n    \"sidebar appbar\"\r\n    \"sidebar main\" ;\r\n}\r\n\r\n.appbar {\r\n    grid-column: col2;\r\n    grid-row: row1;\r\n    border-top: none;\r\n}\r\n.sidebar {\r\n    grid-column: col1;\r\n    grid-row-start: row1;\r\n    grid-row-end: 3;\r\n}\r\n.content {\r\n    grid-column: col2;\r\n    grid-row: row2;\r\n}\r\n\r\n.back-arrow {\r\n    padding: 0 5px 0 0;\r\n}\r\n",
                    "styleUrl": "./global-where-used.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "headerService",
                        "type": "HeaderService"
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "headerService",
                        "type": "HeaderService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n\r\n    \r\n    <div class=\"appbar\">\r\n        <lib-uv-ui-app-bar>\r\n            <div right>\r\n                <lib-uv-ui-svg-button class=\"margin-right-xs\" color='blue' svgPath='assets/more-horizontal.svg#moreHorizontal'></lib-uv-ui-svg-button>\r\n                <lib-uv-ui-svg-button color='blue' svgPath='assets/fullscreen.svg#fullScreen'></lib-uv-ui-svg-button>\r\n            </div>\r\n        </lib-uv-ui-app-bar>\r\n    </div>\r\n\r\n    <div class=\"sidebar\">\r\n        <lib-uv-ui-app-side-bar>\r\n            <div top>\r\n                <div class=\"height-sm top-content flex justify-content-space-between margin-bottom-sm\">\r\n                    <div>\r\n                        <lib-uv-ui-svg-button size=\"xs\" class=\"back-arrow\" color='blue' svgPath='assets/back-arrow.svg#back-arrow'></lib-uv-ui-svg-button>\r\n                        <lib-uv-ui-button buttonText=\"Back\" type=\"btn-blue\"></lib-uv-ui-button>\r\n                    </div>\r\n                </div>\r\n                <p class=\"heading-4 margin-bottom-xs\">Title Goes Here</p>\r\n                <p>Lorem ipsum dolor sit amet consectetur eiusmod tempor adipiscing elit sed do incididunt ut labore</p>\r\n            </div>\r\n\r\n            <div bottom>\r\n                    <div *ngFor=\"let tab of gwuTabs\">\r\n                        <lib-uv-ui-tab \r\n                        svgPath=\"{{tab.icon}}\" \r\n                        label=\"{{tab.linkText}}\">\r\n                    </lib-uv-ui-tab>\r\n                </div> \r\n            </div>\r\n        </lib-uv-ui-app-side-bar>\r\n    </div>\r\n\r\n<div class=\"content\">\r\n    \r\n    <lib-uv-ui-widget></lib-uv-ui-widget>\r\n    \r\n</div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-5f44e91a65046dcee5e38bdeb1b4fb92",
            "file": "projects/uv-ui-lib/src/lib/header/header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "headerSvgPath",
                    "defaultValue": "''",
                    "line": 11
                },
                {
                    "name": "headerText",
                    "defaultValue": "''",
                    "line": 10
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'lib-uv-ui-header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeaderComponent {\r\n    @Input() public headerText = '' ;\r\n    @Input() public headerSvgPath = '';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n@import '../scss/styles';\r\n\r\n.header {\r\n    position: relative;\r\n    border-left: none;\r\n    height: 100%;\r\n    z-index: 100;\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"header box flex justify-content-space-between\">\r\n\r\n    <div class=\"flex justify-content-center align-items-center\">\r\n\r\n        <span class=\"gray img-sm margin-sm\">\r\n            <svg><use [attr.href]=\"headerSvgPath\"></use></svg>\r\n        </span>\r\n        <h1 class=\"heading\">{{headerText}}</h1>\r\n\r\n    </div>\r\n\r\n    <div class=\"flex flex-row justify-content-center align-items-center\">\r\n\r\n        <ng-content></ng-content>\r\n\r\n    </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "HomeSplashComponent",
            "id": "component-HomeSplashComponent-ef5509473d97d9163741c4c92aaf6636",
            "file": "projects/uv-ui-prototype/src/app/home-splash/home-splash.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "prototype-uv-ui-home-splash",
            "styleUrls": [
                "./home-splash.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home-splash.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { HeaderService } from '../services/header.service';\r\n\r\n@Component({\r\n  selector: 'prototype-uv-ui-home-splash',\r\n  templateUrl: './home-splash.component.html',\r\n  styleUrls: ['./home-splash.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HomeSplashComponent implements OnInit{\r\n\r\n    constructor(private headerService: HeaderService){}\r\n\r\n    public ngOnInit(): void {\r\n        this.headerService.setTitle('Dashboard');\r\n        this.headerService.setAppIcon('assets/apps-quad.svg#dashboard');\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".logo-splash-block {\r\n    text-align: center;\r\n    position: absolute;\r\n    width: 577px;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n\r\n    &__logo{\r\n    width: 100px;\r\n    margin: 30px;\r\n    }\r\n}\r\n",
                    "styleUrl": "./home-splash.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "headerService",
                        "type": "HeaderService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "headerService",
                        "type": "HeaderService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"logo-splash-block\">\r\n\r\n    <img class=\"logo-splash-block__logo\" src=\"http://dpzaq1wj21co3.cloudfront.net/uv-logo.svg\">\r\n\r\n    <p class=\"heading margin-bottom-xs\">Welcome to Ultraviolet</p>\r\n    <p class=\"heading-4\">Let's get you started! Click on a module below so we can get you to the right place.</p>\r\n\r\n</div>\r\n"
        },
        {
            "name": "ImageButtonComponent",
            "id": "component-ImageButtonComponent-b5e8abfe23b33e88e2e8897e0a09f5a1",
            "file": "projects/uv-ui-lib/src/lib/image-button/image-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-image-button",
            "styleUrls": [
                "./image-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./image-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "src",
                    "defaultValue": "''",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-uv-ui-image-button',\r\n  templateUrl: './image-button.component.html',\r\n  styleUrls: ['./image-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImageButtonComponent {\r\n\r\n    @Input() public src = '';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n@import '../scss/styles';\r\n\r\n.btn-image {\r\n    &,\r\n    &:link,\r\n    &:visited {\r\n        font-family: $font-family;\r\n        font-weight: $font-bold;\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        border-radius: 8px;\r\n        border: none;\r\n        cursor: pointer;\r\n        background-color: transparent;\r\n    }\r\n\r\n    &:active,\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    width: $sm-size;\r\n    height: $sm-size;\r\n\r\n    &-xs {\r\n        width: $xs-size;\r\n        height: $xs-size;\r\n    }\r\n}\r\n",
                    "styleUrl": "./image-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class='btn-image'><img [src]=\"src\"></button>\r\n"
        },
        {
            "name": "LandingComponent",
            "id": "component-LandingComponent-cabaf56aefa1af8e63b65968777d0779",
            "file": "projects/uv-ui-prototype/src/app/search/landing/landing.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-landing",
            "styleUrls": [
                "./landing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./landing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LandingComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".search-landing { \r\n    position: relative;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n\r\n    &--logo {\r\n        display: block;\r\n        opacity: .3;\r\n        width: 123px;\r\n        height: 123px;\r\n        margin: 0 auto 30px auto;\r\n    }\r\n}\r\n",
                    "styleUrl": "./landing.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"search-landing\">\r\n    <img class=\"search-landing--logo\" src=\"http://dpzaq1wj21co3.cloudfront.net/uv-logo.svg\">\r\n    <p class=\"heading-5\">Some kind of messaging here...</p>\r\n</div>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-672d147c46ab0bebbcc3d5a7b83f6706",
            "file": "projects/uv-ui-prototype/src/app/login/login.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sandbox-uv-ui-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'sandbox-uv-ui-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoginComponent {\r\n\r\n  constructor(private route: Router) { }\r\n\r\n  public login() {\r\n    this.route.navigate(['/main/home-splash']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "route",
                        "type": "Router"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"login box flex flex-column align-items-center position-center padding-md\">\r\n\r\n    <img class=\"img-xl margin-bottom-sm\" src=\"http://dpzaq1wj21co3.cloudfront.net/uv-logo.svg\">\r\n\r\n    <p class=\"heading-3\">Welcome to UV</p>\r\n\r\n        <lib-uv-ui-button\r\n            buttonText=\"Login\"\r\n            (click)=\"login()\"\r\n            type=\"btn-login\">\r\n        </lib-uv-ui-button>\r\n\r\n    </div>\r\n"
        },
        {
            "name": "MainComponent",
            "id": "component-MainComponent-2ab66bfe85e9a903d79f3d8f65fd5101",
            "file": "projects/uv-ui-prototype/src/app/layouts/main/main.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "prototype-app-main",
            "styleUrls": [
                "./main.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "searchQuery",
                    "defaultValue": "''",
                    "line": 17
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appIcon",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "headerService",
                    "type": "HeaderService",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "nav",
                    "defaultValue": "navItems",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onSearchAction",
                    "args": [
                        {
                            "name": "data",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, OnInit, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { HeaderService } from '../../services/header.service';\r\nimport { navItems } from './navItems';\r\n\r\n@Component({\r\n    selector: 'prototype-app-main',\r\n    templateUrl: './main.component.html',\r\n    styleUrls: ['./main.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class MainComponent implements OnInit {\r\n\r\n    public nav = navItems;\r\n    public title = '';\r\n    public appIcon = '';\r\n    @Input() public searchQuery = '';\r\n\r\n    constructor(public headerService: HeaderService, private ref: ChangeDetectorRef) { }\r\n\r\n    public ngOnInit(): void {\r\n        this.headerService.currentTitle$.subscribe(title => {\r\n            this.title = title;\r\n            this.ref.detectChanges();\r\n        });\r\n        this.headerService.currentIcon$.subscribe(icon => {\r\n            this.appIcon = icon;\r\n            this.ref.detectChanges();\r\n        });\r\n    }\r\n\r\n    public onSearchAction(data: string): void {\r\n        console.log(data, 'search clicked');\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grid{\r\n    position: fixed;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: grid;\r\n    grid-gap: 0;\r\n    grid-template-columns: [col1] 64px [col2] auto;\r\n    grid-template-rows: [row1] 64px [row2] auto;\r\n    grid-template-areas: \r\n    \"navbar header\"\r\n    \"navbar main\" ;\r\n}\r\n\r\n.header {\r\n    grid-column: col2;\r\n    grid-row: row1;\r\n}\r\n\r\n.navbar {\r\n    grid-column: col1;\r\n    grid-row-start: row1;\r\n    grid-row-end: 3;\r\n}\r\n\r\n.content {\r\n    grid-column: col2;\r\n    grid-row: row2;\r\n}\r\n\r\n",
                    "styleUrl": "./main.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "headerService",
                        "type": "HeaderService"
                    },
                    {
                        "name": "ref",
                        "type": "ChangeDetectorRef"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "headerService",
                        "type": "HeaderService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ref",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"header\">\r\n        <lib-uv-ui-header\r\n            [headerText]=\"title\"\r\n            [headerSvgPath]=\"appIcon\">\r\n\r\n            <lib-uv-ui-search-panel type=\"full\" *ngIf=\"title === 'Search'\" (searchClicked)=\"onSearchAction(searchQuery)\"></lib-uv-ui-search-panel>\r\n\r\n            <lib-uv-ui-svg-button color='blue' svgPath='assets/profile.svg#profile' class=\"margin-left-sm margin-right-sm\"></lib-uv-ui-svg-button>\r\n\r\n        </lib-uv-ui-header>\r\n    </div>\r\n\r\n    <div class=\"navbar\">\r\n        <lib-uv-ui-navbar-dashboard [navlinks]=\"nav\"></lib-uv-ui-navbar-dashboard>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "NavbarDashboardComponent",
            "id": "component-NavbarDashboardComponent-72a0cbff3604b42bb57eab29dacc126e",
            "file": "projects/uv-ui-lib/src/lib/navbar-dashboard/navbar-dashboard.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-navbar-dashboard",
            "styleUrls": [
                "./navbar-dashboard-component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar-dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "navlinks",
                    "defaultValue": "[]",
                    "line": 12,
                    "type": "INav[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "navigateToRoute",
                    "args": [
                        {
                            "name": "navlink",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "navlink",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackByFn",
                    "args": [
                        {
                            "name": "_",
                            "type": "number"
                        },
                        {
                            "type": "INav"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "INav",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { INav } from '../interfaces/navbar.interfaces';\r\n\r\n@Component({\r\n    selector: 'lib-uv-ui-navbar-dashboard',\r\n    templateUrl: './navbar-dashboard.component.html',\r\n    styleUrls: [ './navbar-dashboard-component.scss' ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NavbarDashboardComponent {\r\n    @Input() public navlinks: INav[] = [];\r\n\r\n    constructor(private router: Router) {}\r\n\r\n    public trackByFn(_: number, {navlink}: INav): string {\r\n\r\n        return navlink;\r\n    }\r\n\r\n    public navigateToRoute(navlink: string) {\r\n        this.router.navigateByUrl(navlink);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n\r\n.navbar-dashboard {\r\n    position: relative;\r\n    height: 100%;\r\n    z-index: 200;\r\n    border: $border-gray-light;\r\n    border-bottom: none;\r\n    background-color: var(--color-white);\r\n    box-shadow: $box-shadow-light;\r\n\r\n    &__divider {\r\n        border-bottom: 1px solid $color-gray-light-2;\r\n        opacity: .31;\r\n    }\r\n}\r\n\r\n.navlink-wrapper {\r\n    width: $lg-size;\r\n    height: $lg-size;\r\n    margin: 18px auto 0;\r\n    border-radius: 50%;\r\n    padding: 10px;\r\n\r\n    &:hover {\r\n        background-color: $color-gray-light-4;\r\n    }\r\n}\r\n\r\n.navbar-logo {\r\n    width: $md-size;\r\n    margin: 0 auto;\r\n    height: 62px;\r\n}\r\n",
                    "styleUrl": "./navbar-dashboard-component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"navbar-dashboard flex flex-column align-content-center\">\r\n\r\n    <img class=\"navbar-logo\" src=\"http://dpzaq1wj21co3.cloudfront.net/uv-logo.svg\">\r\n\r\n    <div class=\"navbar-dashboard__divider\"></div>\r\n\r\n    <span *ngFor=\"let navlink of navlinks trackBy: trackByFn\" class=\"navlink-wrapper\">\r\n        <a [routerLink]=\"navlink.navlink\"><img [src]=\"navlink.icon\"></a>\r\n    </span>\r\n\r\n</div>\r\n"
        },
        {
            "name": "NavbarDashboardSubComponent",
            "id": "component-NavbarDashboardSubComponent-434e2800118f5fa43b69c8e351d0b759",
            "file": "projects/uv-ui-lib/src/lib/navbar-dashboard-sub/navbar-dashboard-sub.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-navbar-dashboard-sub",
            "styleUrls": [
                "./navbar-dashboard-sub-component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar-dashboard-sub.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "headingTxt",
                    "defaultValue": "''",
                    "line": 10
                },
                {
                    "name": "subHeadingTxt",
                    "defaultValue": "''",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-uv-ui-navbar-dashboard-sub',\r\n  templateUrl: './navbar-dashboard-sub.component.html',\r\n  styleUrls: ['./navbar-dashboard-sub-component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NavbarDashboardSubComponent {\r\n    @Input() public headingTxt = '';\r\n    @Input() public subHeadingTxt = '';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n@import '../scss/styles';\r\n\r\n.navbar-dashboard-sub {\r\n    position: relative;\r\n    width: 212px;\r\n    height: 100vh;\r\n    z-index:100;\r\n    border: $border-gray-light;\r\n    border-left:none;\r\n    border-bottom: none;\r\n    background-color:var(--color-white);\r\n    box-shadow: $box-shadow-light;\r\n\r\n    &__heading-container {\r\n        padding: 18px 16px;\r\n        height: 88px;\r\n    }\r\n\r\n    &__snippets-scrollbar-padding {\r\n        padding: 0 16px 0 16px;\r\n        height: 100%;\r\n    }\r\n\r\n    &__snippets-flexbox {\r\n        height: 100%;\r\n        padding: 16px 16px 200px 0;\r\n        overflow: auto;\r\n        pointer-events: auto;\r\n\r\n        &:hover .navbar-dashboard-sub__snippets-flexbox__scrollbar-cover {\r\n            background-color: var(--color-white);\r\n            opacity: 0;\r\n        }\r\n\r\n        &__scrollbar-cover {\r\n            transition: all .5s;\r\n            display: inline-block;\r\n            position: absolute;\r\n            right: 0;\r\n            width: 15%;\r\n            height:100%;\r\n            background-color: rgba(var(--color-white), 1);\r\n            pointer-events: none;\r\n        }\r\n    }\r\n\r\n    &__icon {\r\n        width: 26px;\r\n        height: 26px;\r\n\r\n        &:hover {\r\n            background-color: $color-gray-light-4;\r\n            border-radius: 50%;\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./navbar-dashboard-sub-component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"navbar-dashboard-sub\">\r\n\r\n    <div class=\"navbar-dashboard-sub__heading-container flex justify-content-space-between\">\r\n        <div>\r\n            <p class=\"heading heading-5\">{{headingTxt}}</p>\r\n            <p class=\"heading heading-sub\">{{subHeadingTxt}}</p>\r\n        </div>\r\n        <lib-uv-ui-image-button\r\n            class=\"navbar-dashboard-sub__icon\"\r\n            src=\"http://dpzaq1wj21co3.cloudfront.net/icons/more-horizontal.svg\"\r\n            >\r\n        </lib-uv-ui-image-button>\r\n        <!-- <img class=\"navbar-dashboard-sub__icon\" src=\"http://dpzaq1wj21co3.cloudfront.net/icons/more-horizontal.svg\"> -->\r\n    </div>\r\n\r\n    <div class=\"divider\"></div>\r\n\r\n    <div class=\"navbar-dashboard-sub__snippets-scrollbar-padding\">\r\n        <div class=\"navbar-dashboard-sub__snippets-flexbox flex-column\">\r\n            <div class=\"navbar-dashboard-sub__snippets-flexbox__spacer\"></div>\r\n            <div class=\"navbar-dashboard-sub__snippets-flexbox__scrollbar-cover\"></div>\r\n            \r\n            <ng-content></ng-content>\r\n            \r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-de8172fc779fd13c06234819bfeaa8ee",
            "file": "projects/uv-ui-prototype/src/app/search/search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "categorySelected",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "filterBarActive",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "items",
                    "defaultValue": "[\r\n        {title: 'Lorem ipsum', checked: 'checked'},\r\n        {title: 'Ipsum sit amet', checked: ''},\r\n        {title: 'Amet lorem', checked: ''},\r\n        {title: 'Lorem ipsum sit', checked: 'checked'},\r\n        {title: 'Lorem ipsum amet', checked: 'checked'}\r\n    ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "reOrderModeActivated",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "searchCategory",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "searchItem",
                    "defaultValue": "{category: '', title: '', description: ''}",
                    "type": "SearchResult",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "searchItemsArray",
                    "defaultValue": "[]",
                    "type": "SearchResult[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "searchTabs",
                    "defaultValue": "DEFAULT_SEARCH_MENU_STATE.menuTabs",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "showContent",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearResults",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onTabClicked",
                    "args": [
                        {
                            "name": "category",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onToggleTabActive",
                    "args": [
                        {
                            "name": "category",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 61,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reOrderMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "toggleFilterBar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Component,  ChangeDetectionStrategy, OnInit } from '@angular/core';\r\nimport { HeaderService } from '../services/header.service';\r\nimport { SearchResult } from './models/search-result.model';\r\nimport { DEFAULT_SEARCH_MENU_STATE } from './models/search-results-state';\r\n\r\n@Component({\r\n  selector: 'lib-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n    public searchItemsArray: SearchResult[] = [];\r\n    public searchItem: SearchResult = {category: '', title: '', description: ''};\r\n    public searchCategory = '';\r\n    public showContent = false;\r\n    public searchTabs = DEFAULT_SEARCH_MENU_STATE.menuTabs;\r\n    public categorySelected = true;\r\n    public reOrderModeActivated = false;\r\n    public filterBarActive = false;\r\n    public items = [\r\n        {title: 'Lorem ipsum', checked: 'checked'},\r\n        {title: 'Ipsum sit amet', checked: ''},\r\n        {title: 'Amet lorem', checked: ''},\r\n        {title: 'Lorem ipsum sit', checked: 'checked'},\r\n        {title: 'Lorem ipsum amet', checked: 'checked'}\r\n    ];\r\n\r\n    constructor(private headerService: HeaderService){\r\n        this.categorySelected = false;\r\n    }\r\n\r\n    public drop(event: CdkDragDrop<string[]>) {\r\n        moveItemInArray(this.searchTabs, event.previousIndex, event.currentIndex);\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.headerService.setTitle('Search');\r\n        this.headerService.setAppIcon('assets/search.svg#search');\r\n    }\r\n\r\n    public reOrderMode() {\r\n        this.reOrderModeActivated = !this.reOrderModeActivated;\r\n    }\r\n\r\n    public onTabClicked(category: string) {\r\n        this.searchCategory = category;\r\n        this.categorySelected = true;\r\n    }\r\n\r\n    public toggleFilterBar() {\r\n        this.filterBarActive = !this.filterBarActive;\r\n    }\r\n\r\n    public clearResults() {\r\n       this.categorySelected = false;\r\n    }\r\n\r\n    public onToggleTabActive(category: string): boolean {\r\n        if (this.searchCategory === category) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // public trackByFn(_: number, {link}: this.searchTabs): string {\r\n    //     return link;\r\n    // }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grid{\r\n    position: relative;\r\n    height: 100%;\r\n    display: grid;\r\n    grid-template-rows: [row1] 68px [row2] auto;\r\n    grid-template-columns: [col1] 336px [col2] min-content [col3] auto;\r\n    grid-template-areas: \r\n    \"sidebar sidebar2 appbar\"\r\n    \"sidebar sidebar2 content\" ;\r\n}\r\n\r\n.sidebar {\r\n    grid-column: col1;\r\n    grid-row-start: row1;\r\n    grid-row-end: 3;\r\n    position: relative;\r\n    z-index: 150;\r\n}\r\n\r\n.sidebar2 {\r\n    grid-column: col2;\r\n    grid-row-start: row1;\r\n    grid-row-end: 3;\r\n    // border: 10px solid blue;\r\n}\r\n\r\n.appbar {\r\n    grid-row: row1;\r\n    padding: 20px;\r\n    border-top: none;\r\n    border-left: none;\r\n}\r\n\r\n.content {\r\n    grid-column: col3;\r\n    grid-row-start: row1;\r\n    grid-row-end: 3;\r\n    padding: 32px 32px 0 32px;\r\n    display: grid;\r\n    justify-content: center;\r\n    // border: 3px solid green;\r\n}\r\n\r\nrouter-outlet {\r\n    grid-column: col2;\r\n    grid-row-start: row1;\r\n    grid-row-end: 3;\r\n}\r\n\r\n.back-arrow {\r\n    margin-right: 5px;\r\n}\r\n\r\n.filter-bar-width {\r\n    width: 288px;\r\n}\r\n\r\n.close-button {\r\n    padding-top: 6px;\r\n}\r\n\r\n/* Hide the browser's default checkbox */\r\n@supports(-webkit-appearance: none) or (-moz-appearance: none) {\r\n    input[type='checkbox'],\r\n    input[type='radio'] {\r\n      -webkit-appearance: none;\r\n      -moz-appearance: none;\r\n    }\r\n  }\r\n\r\n  .wrapper {\r\n      height: 100%;\r\n  }\r\n\r\n/* The container */\r\n.container {\r\n    // display: block;\r\n    position: relative;\r\n    padding-left: 35px;\r\n    margin: 12px 0;\r\n    font-size: 22px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    min-height: 100%;\r\n    // border: 2px solid black;\r\n}\r\n\r\n/* Hide the browser's default checkbox */\r\n.container input {\r\n    position: absolute;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n    height: 0;\r\n    width: 0;\r\n}\r\n\r\n/* custom checkbox */\r\n.checkmark {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 16px;\r\n    width: 16px;\r\n    background-color: #F5F6FA;\r\n    border: 1px solid #DBDBDB;\r\n    border-radius: 3px;\r\n}\r\n\r\n/* on mouse-over */\r\n.container:hover input ~ .checkmark {\r\n    background-color: #F5F6FA;\r\n    cursor: pointer;\r\n}\r\n\r\n/* when the checkbox is checked */\r\n.container input:checked ~ .checkmark {\r\n    background-color: #F5F6FA;\r\n}\r\n\r\n/* custom the checkmark/indicator */\r\n.checkmark:after {\r\n    content: \"\";\r\n    position: relative;\r\n    display: none;\r\n}\r\n\r\n/* Show the checkmark when checked */\r\n.container input:checked ~ .checkmark:after {\r\n    display: block;\r\n}\r\n\r\n/* custom checkmark/indicator */\r\n.container .checkmark:after {\r\n    left: 5px;\r\n    top: 2px;\r\n    width: 5px;\r\n    height: 9px;\r\n    border: solid #6E6D7A; //color-gray-light-6\r\n    border-width: 0 2px 2px 0;\r\n    -webkit-transform: rotate(45deg);\r\n    -ms-transform: rotate(45deg);\r\n    transform: rotate(45deg);\r\n}\r\n\r\n.filter-scroll-container {\r\n    padding: 25px 32px;\r\n    margin-right: 10px;\r\n    overflow: auto;\r\n    height: calc(100% - 150px);\r\n    // height: 300px;\r\n    position: relative;\r\n}\r\n",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "headerService",
                        "type": "HeaderService"
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "headerService",
                        "type": "HeaderService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"sidebar\">     \r\n        <lib-uv-ui-app-side-bar>\r\n\r\n            <div top>\r\n                <div class=\"height-sm top-content flex justify-content-space-between margin-bottom-sm\">\r\n                    <div>\r\n                        <lib-uv-ui-svg-button size=\"xs\" class=\"back-arrow\" color='blue' svgPath='assets/back-arrow.svg#back-arrow'></lib-uv-ui-svg-button>\r\n                        <lib-uv-ui-button buttonText=\"Back\" type=\"btn-blue\" (click)=\"clearResults()\"></lib-uv-ui-button>\r\n                    </div>\r\n                    <div>\r\n                        <lib-uv-ui-svg-button color='blue' class=\"margin-right-xs\" (click)=\"reOrderMode()\" svgPath='assets/up-down-arrows.svg#up-down-arrows'></lib-uv-ui-svg-button>\r\n                        <lib-uv-ui-svg-button color='blue' svgPath='assets/filter.svg#filter' (click)=\"toggleFilterBar()\"></lib-uv-ui-svg-button>\r\n                    </div>\r\n                </div>\r\n                <p class=\"heading-4 margin-bottom-xs\">Results</p>\r\n            </div>\r\n\r\n            <div bottom>\r\n                \r\n                <div *ngIf=\"!reOrderModeActivated\">\r\n                    <div *ngFor=\"let tab of searchTabs\">\r\n                        <lib-uv-ui-tab \r\n                        (click)=\"onTabClicked(tab.category)\"\r\n                        [isDisabled]=\"tab.entitySearchCount === 0\"\r\n                        [isActive]=\"onToggleTabActive(tab.category)\"\r\n                        [isReorderMode]=\"reOrderModeActivated\"\r\n                        svgPath=\"{{tab.icon}}\" \r\n                        label=\"{{tab.title}}\" \r\n                        [routerLink]=\"tab.routeUri\">\r\n                        <span class=\"chip\" *ngIf=\"categorySelected && tab.entitySearchCount > 1\">{{tab.entitySearchCount}}</span>\r\n                    </lib-uv-ui-tab>\r\n                </div> \r\n            </div>\r\n\r\n                <div *ngIf=\"reOrderModeActivated\" cdkDropList  (cdkDropListDropped)=\"drop($event)\">\r\n                    <div *ngFor=\"let tab of searchTabs\" cdkDrag>\r\n                        <lib-uv-ui-tab \r\n                            \r\n                            (click)=\"onTabClicked(tab.category)\"\r\n                            [isDisabled]=\"tab.entitySearchCount === 0\"\r\n                            [isActive]=\"onToggleTabActive(tab.category)\"\r\n                            [isReorderMode]=\"reOrderModeActivated\"\r\n                            svgPath=\"{{tab.icon}}\" \r\n                            label=\"{{tab.title}}\" \r\n                            [routerLink]=\"tab.routeUri\">\r\n                            <span class=\"chip\" *ngIf=\"categorySelected && tab.entitySearchCount > 1\">{{tab.entitySearchCount}}</span>\r\n                        </lib-uv-ui-tab>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"reOrderModeActivated\" class=\"margin-xs flex justify-content-flex-end\">\r\n                    <lib-uv-ui-button buttonText=\"Close\" class=\"margin-right-sm\" type=\"btn-blue\" (click)=\"reOrderMode()\"></lib-uv-ui-button>\r\n                    <lib-uv-ui-button buttonText=\"Save\" type=\"btn-blue\" (click)=\"clearResults()\"></lib-uv-ui-button>\r\n                </div>\r\n            </div>\r\n\r\n        </lib-uv-ui-app-side-bar>\r\n        \r\n    </div>\r\n    \r\n    <div class=\"sidebar2\" [ngClass]=\"{ 'filter-bar-width' : filterBarActive }\">\r\n        <lib-uv-ui-app-side-bar *ngIf=\"filterBarActive\">\r\n            <div top>\r\n                <div class=\"margin-bottom-sm flex justify-content-space-between\" >\r\n                    <p class=\"heading-4\">Filters</p>\r\n                    <lib-uv-ui-svg-button color='blue' class=\"close-button\" svgPath='assets/close.svg#close' size=\"xs\" (click)=\"toggleFilterBar()\"></lib-uv-ui-svg-button>\r\n                </div>\r\n                \r\n                <lib-uv-ui-search-panel type=\"basic\"></lib-uv-ui-search-panel>\r\n            </div>\r\n            <div bottom>\r\n                <div class=\"filter-scroll-container flex flex-column\">\r\n                    <!-- <p class=\"bold paragraph margin-bottom-xxs\">Technology</p>\r\n                    <div *ngFor=\"let item of items\" class=\"container\">\r\n                        <label>\r\n                            <input type=\"checkbox\" checked={{item.checked}}>\r\n                            <span class=\"checkmark\"></span>\r\n                            <p class=\"paragraph\">{{item.title}}</p>\r\n                        </label>\r\n                    </div> -->\r\n                    <p class=\"bold paragraph margin-top-xs margin-bottom-xxs\">Discipline</p>\r\n                    <div *ngFor=\"let item of items\" class=\"container\">\r\n                        <label>\r\n                            <input type=\"checkbox\" checked={{item.checked}}>\r\n                            <span class=\"checkmark\"></span>\r\n                            <p class=\"paragraph\">{{item.title}}</p>\r\n                        </label>\r\n                    </div>\r\n                    <p class=\"bold paragraph margin-top-xs margin-bottom-xxs\">Category</p>\r\n                    <div *ngFor=\"let item of items\" class=\"container\">\r\n                        <label>\r\n                            <input type=\"checkbox\" checked={{item.checked}}>\r\n                            <span class=\"checkmark\"></span>\r\n                            <p class=\"paragraph\">{{item.title}}</p>\r\n                        </label>\r\n                    </div>\r\n                    <p class=\"bold paragraph margin-top-xs margin-bottom-xxs\">Technology</p>\r\n                    <div *ngFor=\"let item of items\" class=\"container\">\r\n                        <label>\r\n                            <input type=\"checkbox\" checked={{item.checked}}>\r\n                            <span class=\"checkmark\"></span>\r\n                            <p class=\"paragraph\">{{item.title}}</p>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </lib-uv-ui-app-side-bar>\r\n    </div>\r\n    \r\n    <div class=\"content\">\r\n        <app-search-results *ngIf=\"categorySelected\" [category]=\"searchCategory\"></app-search-results>\r\n        <app-landing *ngIf=\"!categorySelected\"></app-landing>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "SearchPanelComponent",
            "id": "component-SearchPanelComponent-f4dbc947d87e3e36428344ad28e179c6",
            "file": "projects/uv-ui-lib/src/lib/search-panel/search-panel.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-search-panel",
            "styleUrls": [
                "./search-panel-component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'basic'",
                    "line": 12,
                    "type": "\"basic\" | \"full\""
                }
            ],
            "outputsClass": [
                {
                    "name": "searchClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "cssClasses",
                    "defaultValue": "['search-panel']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getCssClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Output, EventEmitter, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'lib-uv-ui-search-panel',\r\n    templateUrl: './search-panel.component.html',\r\n    styleUrls: ['./search-panel-component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchPanelComponent implements OnInit {\r\n\r\n    @Output() readonly searchClicked = new EventEmitter<void>();\r\n    @Input() public type: 'basic' | 'full' = 'basic';\r\n    public cssClasses = ['search-panel'];\r\n\r\n    public onSearch() {\r\n        this.searchClicked.emit();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.getCssClasses();\r\n    }\r\n\r\n    public getCssClasses() {\r\n        this.cssClasses.push(this.type);\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n@import '../scss/styles';\r\n\r\n.search-panel {\r\n    height: 40px;\r\n    \r\n    border-radius: 28px;\r\n    display: flex;\r\n    width: 100%;\r\n    background-color: #FFFFFF;\r\n    padding-right: 12px;\r\n    transition: all .2s;\r\n\r\n    \r\n\r\n    &__input {\r\n        margin-left: 16px;\r\n        margin-right: 150px;\r\n        font-size: 14px;\r\n        font-family: inherit;\r\n        border: none;\r\n\r\n        &:focus,\r\n        &:invalid {\r\n            outline: none;\r\n        }\r\n\r\n        &::-webkit-input-placeholder {\r\n            color: $color-gray;\r\n            font-style: italic;\r\n        }\r\n    }\r\n}\r\n\r\n.full {\r\n    border: $border-gray-light;\r\n\r\n    &__search-field {\r\n        margin-left: 16px;\r\n    }\r\n}\r\n",
                    "styleUrl": "./search-panel-component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [ngClass]=\"cssClasses\" class=\"search-panel flex justify-content-space-between\">\r\n\r\n    <div class=\"flex align-items-center\" [ngClass]=\"type ==='full' ? 'full__search-field' : ''\">\r\n\r\n        <lib-uv-ui-svg-button color='blue' svgPath='assets/search.svg#search' (click)=\"onSearch()\" ></lib-uv-ui-svg-button>\r\n        \r\n        <input type=\"text\"\r\n        placeholder=\"Search...\"\r\n        class=\"search-panel__input\">\r\n\r\n        <lib-uv-ui-svg-button *ngIf=\"type === 'full'\"color='blue' size='xs' svgPath='assets/close.svg#close' ></lib-uv-ui-svg-button>\r\n        \r\n    </div>\r\n    \r\n    <ng-content></ng-content>\r\n\r\n</div>\r\n\r\n\r\n"
        },
        {
            "name": "SearchResultsComponent",
            "id": "component-SearchResultsComponent-874b463e3b7f2a5d63d95fbdfe577687",
            "file": "projects/uv-ui-prototype/src/app/search/search-results/search-results.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-results",
            "styleUrls": [
                "./search-results.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-results.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "category",
                    "defaultValue": "''",
                    "line": 14
                },
                {
                    "name": "searchResults",
                    "defaultValue": "[]",
                    "line": 13,
                    "type": "SearchResult[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { SearchResult } from '../models/search-result.model';\r\nimport { SearchService } from '../../services/search.service';\r\n\r\n@Component({\r\n  selector: 'app-search-results',\r\n  templateUrl: './search-results.component.html',\r\n  styleUrls: ['./search-results.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchResultsComponent {\r\n\r\n    @Input() public searchResults: SearchResult[] = [];\r\n    @Input() public category = '';\r\n\r\n    constructor(private searchService: SearchService) {\r\n        this.searchResults = this.searchService.allSearchResults;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".documents {\r\n    max-width: 1040px;\r\n    height: 80vh;\r\n    position: relative;\r\n    flex-direction: column;\r\n}\r\n\r\n.heading-container {\r\n    padding: 25px 32px;\r\n}\r\n\r\n.content-container {\r\n    padding: 25px 32px;\r\n    margin-right: 10px;\r\n    overflow: auto;\r\n    height: 100%;\r\n    position: relative;\r\n}\r\n",
                    "styleUrl": "./search-results.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "searchService",
                        "type": "SearchService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "searchService",
                        "type": "SearchService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"documents box flex\">\r\n    <div class=\"heading-container flex justify-content-space-between\">\r\n    <p class=\"heading-3\">{{category}}</p>\r\n    <span class=\"chip\">{{searchResults.length}}</span>\r\n</div>\r\n    \r\n<div class=\"divider\"></div>\r\n    \r\n<div class=\"content-container\">\r\n    <div class=\"margin-bottom-md\" *ngFor=\"let item of searchResults | filterResults: category\">\r\n        <p class=\"heading-5\">{{item.title}}</p>\r\n        <p class=\"paragraph\">{{item.description}}</p>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "SettingsComponent",
            "id": "component-SettingsComponent-61e07b96d15781857360088326f6572b",
            "file": "projects/uv-ui-prototype/src/app/settings/settings.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-settings",
            "styleUrls": [
                "./settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { HeaderService } from '../services/header.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n    constructor(private headerService: HeaderService){}\r\n\r\n    public ngOnInit(): void {\r\n        this.headerService.setTitle('Settings');\r\n        this.headerService.setAppIcon('assets/apps-settings.svg#settings');\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "headerService",
                        "type": "HeaderService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "headerService",
                        "type": "HeaderService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n"
        },
        {
            "name": "SideBySideComponent",
            "id": "component-SideBySideComponent-01d459f21e3ca4306c0be0c93ab29870",
            "file": "projects/uv-ui-prototype/src/app/side-by-side/side-by-side.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "prototype-uv-ui-side-by-side",
            "styleUrls": [
                "./side-by-side.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-by-side.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "compareTasks",
                    "defaultValue": "compareTasksData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "dropdownItems",
                    "defaultValue": "dropdownItems",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "loadTask",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addTaskClicked",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "switchFilterClicked",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { HeaderService } from '../services/header.service';\r\nimport { compareTasksData } from './compareTasks';\r\nimport { dropdownItems } from './dropdownItems';\r\n\r\n@Component({\r\n    selector: 'prototype-uv-ui-side-by-side',\r\n    templateUrl: './side-by-side.component.html',\r\n    styleUrls: ['./side-by-side.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SideBySideComponent implements OnInit{\r\n    public loadTask = true;\r\n    public compareTasks = compareTasksData;\r\n    public dropdownItems = dropdownItems;\r\n\r\n    constructor(private headerService: HeaderService) {}\r\n\r\n    public addTaskClicked(event: Event): void {\r\n        console.log(event, 'add task was clicked');\r\n    }\r\n\r\n    public switchFilterClicked(event: Event): void {\r\n        console.log(event, 'filter button was clicked');\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.headerService.setTitle('Side By Side');\r\n        this.headerService.setAppIcon('assets/apps-sbs.svg#sideBySide');\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grid{\r\n    position: relative;\r\n    height: 100vh;\r\n    display: grid;\r\n    grid-template-rows: [row1] 68px [row2] auto;\r\n    grid-template-areas: \r\n    \"appbar\"\r\n    \"content\" ;\r\n}\r\n\r\n.appbar {\r\n    grid-row: row1;\r\n    padding: 20px;\r\n    border-top: none;\r\n    border-left: none;\r\n}\r\n\r\n.content {\r\n    grid-row: row2;\r\n    overflow: auto;\r\n    padding-left: 96px;\r\n    padding-top:20px;\r\n}\r\n",
                    "styleUrl": "./side-by-side.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "headerService",
                        "type": "HeaderService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "headerService",
                        "type": "HeaderService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n\r\n    <div class=\"box appbar flex align-items-center justify-content-space-between\">\r\n\r\n        <p class=\"heading-4\">Comparison Tasks</p>\r\n        \r\n        <div>\r\n            <lib-uv-ui-button type= \"btn-round\" class=\"btn-add-task margin-right-md\" buttonText=\"+\" (click)=\"addTaskClicked($event)\"></lib-uv-ui-button>\r\n            <lib-uv-ui-dropdown-button [items]=\"dropdownItems\" dropdownName=\"Switch filter\" (click)=\"switchFilterClicked($event)\"></lib-uv-ui-dropdown-button>\r\n        </div>\r\n        \r\n    </div>\r\n\r\n<div class=\"content\">\r\n    \r\n    <lib-uv-ui-task-snippet [tasks]=\"compareTasks\">\r\n    </lib-uv-ui-task-snippet>\r\n    \r\n</div>\r\n\r\n</div>\r\n\r\n"
        },
        {
            "name": "SnippetComponent",
            "id": "component-SnippetComponent-8a22499c1bd25806abcc900d3a388b75",
            "file": "projects/uv-ui-lib/src/lib/snippet/snippet.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-snippet",
            "styleUrls": [
                "./snippet.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./snippet.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "snippets",
                    "defaultValue": "[]",
                    "line": 12,
                    "type": "INavBarSub[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "snippetEvent",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "snippetClicked",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackByFn",
                    "args": [
                        {
                            "name": "_",
                            "type": "number"
                        },
                        {
                            "type": "INavBarSub"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 19,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "INavBarSub",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\r\nimport { INavBarSub } from '../interfaces/navbar-sub.interfaces';\r\n\r\n@Component({\r\n  selector: 'lib-uv-ui-snippet',\r\n  templateUrl: './snippet.component.html',\r\n  styleUrls: ['./snippet.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SnippetComponent {\r\n\r\n    @Input() public snippets: INavBarSub[] = [];\r\n    @Output() public readonly snippetEvent = new EventEmitter<Event>();\r\n\r\n    public snippetClicked($event: Event): void {\r\n        this.snippetEvent.emit($event);\r\n    }\r\n\r\n    public trackByFn(_: number, {snippetHeading}: INavBarSub): string {\r\n        return snippetHeading;\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n@import '../scss/typography';\r\n@import '../scss/styles';\r\n\r\n\r\n.snippet-wrapper {\r\n    margin-bottom: $sm-size;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        background-color: $color-gray-light-4;\r\n        border-radius: 8px;\r\n    }\r\n}\r\n\r\n.snippet-container {\r\n    height: 73px;\r\n    position: relative;\r\n    min-height: 73px;\r\n    padding: 2px;\r\n\r\n    &-textbox {\r\n        margin-left: 8px;\r\n        width: 120px;\r\n        height: 68px;\r\n        display: inline-block;\r\n        overflow: hidden;\r\n    }\r\n}\r\n",
                    "styleUrl": "./snippet.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"snippet-wrapper\" *ngFor=\"let snippet of snippets trackBy: trackByFn\" (click)=\"snippetClicked($event)\">\r\n    <div class=\"snippet-container\">\r\n        <!-- <img class=\"btn-icon-xs\" [src]=\"snippet.icon\"> -->\r\n        <img class=\"img-small\" [src]=\"snippet.icon\">\r\n        <div class=\"snippet-container-textbox\">\r\n            <p class=\"heading heading-sub\">{{snippet.snippetHeading}}</p>\r\n            <p>{{snippet.snippetTxt}}</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "StartPageComponent",
            "id": "component-StartPageComponent-fb4383e67f5652fa48658962809d67dc",
            "file": "projects/uv-ui-prototype/src/app/start-page/start-page.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "prototype-uv-ui-start-page",
            "styleUrls": [
                "./start-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./start-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "snippetBox",
                    "defaultValue": "[\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    }\r\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "snippetClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'prototype-uv-ui-start-page',\r\n    templateUrl: './start-page.component.html',\r\n    styleUrls: ['./start-page.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class StartPageComponent {\r\n\r\n  public snippetBox = [\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    },\r\n    {\r\n      icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/circle-gray.svg',\r\n      snippetHeading: 'Heading',\r\n      snippetTxt: 'Snippet will go here on three lines. And is clickable'\r\n    }\r\n  ];\r\n\r\n  public snippetClick(event: Event): void {\r\n    console.log('snippet was clicked', event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./start-page.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<lib-uv-ui-navbar-dashboard-sub\r\n    headingTxt=\"Heading\"\r\n    subHeadingTxt=\"Subheading\">\r\n\r\n    <lib-uv-ui-snippet\r\n    [snippets]=\"snippetBox\"\r\n    (snippetEvent)=\"snippetClick($event)\"></lib-uv-ui-snippet>\r\n    \r\n</lib-uv-ui-navbar-dashboard-sub>\r\n\r\n\r\n\r\n\r\n"
        },
        {
            "name": "SvgButtonComponent",
            "id": "component-SvgButtonComponent-343a9f2bbd20e68e13e9e9b2071620e7",
            "file": "projects/uv-ui-lib/src/lib/svg-button/svg-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-svg-button",
            "styleUrls": [
                "./svg-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./svg-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'black'",
                    "line": 11,
                    "type": "\"gray\" | \"blue\" | \"black\""
                },
                {
                    "name": "size",
                    "defaultValue": "'small'",
                    "line": 12,
                    "type": "\"small\" | \"xs\" | \"xxs\""
                },
                {
                    "name": "svgPath",
                    "defaultValue": "''",
                    "line": 10
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cssClasses",
                    "defaultValue": "['btn', 'btn-svg']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getCssClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-uv-ui-svg-button',\r\n  templateUrl: './svg-button.component.html',\r\n  styleUrls: ['./svg-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SvgButtonComponent implements OnInit {\r\n    @Input() public svgPath = '';\r\n    @Input() public color: 'gray' | 'blue' | 'black' = 'black';\r\n    @Input() public size: 'small' | 'xs' | 'xxs' = 'small';\r\n\r\n    public cssClasses = ['btn', 'btn-svg'];\r\n\r\n    public getCssClasses(): void {\r\n        this.cssClasses.push(this.color, this.size);\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.getCssClasses();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/styles';\r\n@import '../scss/variables';\r\n\r\n.btn-svg {\r\n    &,\r\n    &:link,\r\n    &:visited {\r\n        font-family: $font-family;\r\n        font-weight: $font-bold;\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        border-radius: 8px;\r\n        border: none;\r\n        cursor: pointer;\r\n        background-color: transparent;\r\n    }\r\n\r\n    &:active,\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    svg {\r\n        cursor: pointer;\r\n        width: $sm-size;\r\n        height: $sm-size;\r\n    \r\n        &-xs {\r\n            width: $xs-size;\r\n            height: $xs-size;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n.small svg {\r\n    width: $sm-size;\r\n    height: $sm-size;\r\n}\r\n\r\n.xs svg {\r\n    width: $xs-size;\r\n    height: $xs-size;\r\n}\r\n\r\n.xxs svg {\r\n    width: $xxs-size;\r\n    height: $xxs-size;\r\n}\r\n\r\n.gray {\r\n    color: $color-gray-light-3;\r\n    \r\n    &:hover {\r\n        color: $color-blue;\r\n    }\r\n}\r\n\r\n.blue {\r\n    color: $color-blue;\r\n}\r\n",
                    "styleUrl": "./svg-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button [ngClass]=\"cssClasses\">\r\n    <svg><use [attr.href]=\"svgPath\"></use></svg>\r\n</button>\r\n"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-88e00e0c0d79800e5ec867c5241d568e",
            "file": "projects/uv-ui-lib/src/lib/tab/tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-tab",
            "styleUrls": [
                "./tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "defaultValue": "false",
                    "line": 14
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "isReorderMode",
                    "defaultValue": "false",
                    "line": 15
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "line": 12
                },
                {
                    "name": "svgPath",
                    "defaultValue": "''",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-uv-ui-tab',\r\n  templateUrl: './tab.component.html',\r\n  styleUrls: ['./tab.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TabComponent {\r\n\r\n    @Input() public svgPath = '';\r\n    @Input() public label = '';\r\n    @Input() public isDisabled = false;\r\n    @Input() public isActive = false;\r\n    @Input() public isReorderMode = false;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n\r\n.tab {\r\n    display: flex;\r\n    align-content: center;\r\n    align-items: center;\r\n    padding: 14px 24px;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        color: $color-blue;\r\n        font-weight: bold;\r\n        background-color: $color-gray-light-5;\r\n        box-shadow: inset -4px 0 0 $color-blue;\r\n            a, svg, span {\r\n                color: $color-blue;\r\n            }\r\n    }\r\n}\r\n\r\n.disabled {\r\n    color: $color-gray-light;\r\n    pointer-events: none;\r\n    cursor: not-allowed;\r\n    a, svg, span {\r\n        color: $color-gray-light;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        cursor: not-allowed;\r\n        color: $color-gray-light;\r\n        font-weight: none;\r\n        background-color: white;\r\n        box-shadow: none;\r\n        pointer-events: none;\r\n        a, svg, span {\r\n            color: $color-gray-light;\r\n            pointer-events: none;\r\n        }\r\n    }\r\n}\r\n\r\n.active {\r\n    color: $color-blue;\r\n        font-weight: bold;\r\n        background-color: $color-gray-light-5;\r\n        box-shadow: inset -4px 0 0 $color-blue;\r\n            a, svg, span {\r\n                color: $color-blue;\r\n            }\r\n}\r\n\r\n.position {\r\n    position: relative;\r\n    top: 4px;\r\n}\r\n\r\n.reorder-mode {\r\n    border-bottom: 1px solid $color-gray-light;\r\n    background-color: white;\r\n    &:hover {\r\n        cursor: move;\r\n        border: 1px solid $color-gray-light;\r\n    }\r\n    &:active:hover{\r\n        border: 1px solid $color-gray-light;\r\n    }\r\n}\r\n\r\n.cdk-drag {\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\r\n                0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n                0 3px 14px 2px rgba(0, 0, 0, 0.12);\r\n}\r\n",
                    "styleUrl": "./tab.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div \r\n    class=\"tab justify-content-space-between\" \r\n    [ngClass]=\"{'disabled': isDisabled, 'active': isActive, 'reorder-mode': isReorderMode}\">\r\n    <div>\r\n        <svg class=\"gray margin-right-sm position\" [ngClass]=\"{'blue': isReorderMode}\"><use [attr.href]=\"isReorderMode ? 'assets/reorder.svg#reorder' : svgPath\"></use></svg>\r\n        {{label}}\r\n    </div>\r\n    <ng-content></ng-content>\r\n</div>\r\n"
        },
        {
            "name": "TaskSnippetComponent",
            "id": "component-TaskSnippetComponent-cb9cc227c08ddeafe8cf999790809203",
            "file": "projects/uv-ui-lib/src/lib/task-snippet/task-snippet.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-task-snippet",
            "styleUrls": [
                "./task-snippet.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./task-snippet.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "tasks",
                    "defaultValue": "[]",
                    "line": 12,
                    "type": "ITask[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "trackByFn",
                    "args": [
                        {
                            "name": "_",
                            "type": "number"
                        },
                        {
                            "type": "ITask"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "_",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "type": "ITask",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { ITask } from '../interfaces/side-by-side.interfaces';\r\n\r\n@Component({\r\n  selector: 'lib-uv-ui-task-snippet',\r\n  templateUrl: './task-snippet.component.html',\r\n  styleUrls: ['./task-snippet.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TaskSnippetComponent {\r\n\r\n    @Input() public tasks: ITask[] = [];\r\n\r\n    public trackByFn(_: number, {title}: ITask): string {\r\n        return title;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n\r\n.compare-task-box {\r\n    display: inline-block;\r\n    border: $border-gray-light;\r\n    padding: 24px;\r\n    background-color: var(--color-white);\r\n    min-height: 228px;\r\n    width: 200px;\r\n    margin: 0 32px 32px 0;\r\n    border-radius: 2px;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n}\r\n",
                    "styleUrl": "./task-snippet.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div *ngFor=\"let task of tasks; trackBy:trackByFn\" class=\"compare-task-box\">\r\n    <p class=\"btn btn-chip margin-bottom-md\">{{task.started}}</p>\r\n    <p class=\"txt-sm bold margin-bottom-sm\">{{task.title}}</p>\r\n    <p class=\"txt-sm margin-bottom-md\">{{task.description}}</p>\r\n    <p class=\"chip-date\">{{task.date}}</p>\r\n  </div>\r\n"
        },
        {
            "name": "UvUiButtonComponent",
            "id": "component-UvUiButtonComponent-3445dc3244748d08eeadc081354a077a",
            "file": "projects/uv-ui-components/src/lib/uv-ui-button/uv-ui-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-button",
            "styleUrls": [
                "./uv-ui-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./uv-ui-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "line": 13
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 12,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "clicked",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'lib-uv-ui-button',\r\n    templateUrl: './uv-ui-button.component.html',\r\n    styleUrls: [ './uv-ui-button.component.scss' ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UvUiButtonComponent {\r\n    @Input() public primary = false;\r\n    @Input() public backgroundColor?: string;\r\n    @Input() public size: 'small' | 'medium' | 'large' = 'medium';\r\n    @Input() public label = 'Button';\r\n\r\n    @Output() public readonly clicked = new EventEmitter<Event>();\r\n\r\n    public get classes(): string[] {\r\n        const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n        return [ 'storybook-button', `storybook-button--${ this.size }`, mode ];\r\n    }\r\n\r\n    public onClick($event: Event): void {\r\n        this.clicked.emit($event);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0 0 0 1px inset;\r\n}\r\n\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./uv-ui-button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 17
                    }
                }
            },
            "templateData": "<button type=\"button\"\r\n        (click)=\"onClick($event)\"\r\n        [ngClass]=\"classes\"\r\n        [ngStyle]=\"{ 'background-color': backgroundColor }\">\r\n    {{ label }}\r\n</button>\r\n"
        },
        {
            "name": "UvUiButtonComponent",
            "id": "component-UvUiButtonComponent-3445dc3244748d08eeadc081354a077a-1",
            "file": "projects/uv-ui-lib/src/lib/uv-ui-button/uv-ui-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-button",
            "styleUrls": [
                "./uv-ui-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./uv-ui-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "line": 13
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 12,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "clicked",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'lib-uv-ui-button',\r\n    templateUrl: './uv-ui-button.component.html',\r\n    styleUrls: [ './uv-ui-button.component.scss' ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UvUiButtonComponent {\r\n    @Input() public primary = false;\r\n    @Input() public backgroundColor?: string;\r\n    @Input() public size: 'small' | 'medium' | 'large' = 'medium';\r\n    @Input() public label = 'Button';\r\n\r\n    @Output() public readonly clicked = new EventEmitter<Event>();\r\n\r\n    public get classes(): string[] {\r\n        const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n        return [ 'storybook-button', `storybook-button--${ this.size }`, mode ];\r\n    }\r\n\r\n    public onClick($event: Event): void {\r\n        this.clicked.emit($event);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0 0 0 1px inset;\r\n}\r\n\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./uv-ui-button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 17
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "UvUiButtonComponent-1",
            "templateData": "<button type=\"button\"\r\n        (click)=\"onClick($event)\"\r\n        [ngClass]=\"classes\"\r\n        [ngStyle]=\"{ 'background-color': backgroundColor }\">\r\n    {{ label }}\r\n</button>\r\n"
        },
        {
            "name": "WidgetComponent",
            "id": "component-WidgetComponent-925734bc5cc9e6e8d8cea89f409bc56b",
            "file": "projects/uv-ui-lib/src/lib/widget/widget.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-uv-ui-widget",
            "styleUrls": [
                "./widget-component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./widget.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-uv-ui-widget',\r\n  templateUrl: './widget.component.html',\r\n  styleUrls: ['./widget-component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class WidgetComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../scss/variables';\r\n\r\n.widget {\r\n    margin: $xs-size;\r\n    height: auto;\r\n    width: auto;\r\n    border-radius: 16px;\r\n    position: relative;\r\n    padding: 10px;\r\n    overflow: auto;\r\n}\r\n",
                    "styleUrl": "./widget-component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"widget box flex-inline\">\r\n\r\n  <ng-content></ng-content>\r\n\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppBarModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "ImageButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AppBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthService"
                        },
                        {
                            "name": "HelperService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "GlobalWhereUsedComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "MainComponent"
                        },
                        {
                            "name": "SideBySideComponent"
                        },
                        {
                            "name": "StartPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppBarModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "AppSideBarModule"
                        },
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "DropdownButtonModule"
                        },
                        {
                            "name": "HeaderModule"
                        },
                        {
                            "name": "HomeSplashModule"
                        },
                        {
                            "name": "ImageButtonModule"
                        },
                        {
                            "name": "NavbarDashboardModule"
                        },
                        {
                            "name": "NavbarDashboardSubModule"
                        },
                        {
                            "name": "SearchModule"
                        },
                        {
                            "name": "SearchPanelModule"
                        },
                        {
                            "name": "SnippetModule"
                        },
                        {
                            "name": "SvgButtonModule"
                        },
                        {
                            "name": "TabModule"
                        },
                        {
                            "name": "TaskSnippetModule"
                        },
                        {
                            "name": "WidgetModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppSideBarModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppSideBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "SvgButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AppSideBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DropdownButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DropdownButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DropdownButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeaderModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeSplashModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeSplashComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HomeSplashRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HomeSplashComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeSplashRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ImageButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ImageButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ImageButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NavbarDashboardModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NavbarDashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NavbarDashboardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NavbarDashboardSubModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NavbarDashboardSubComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "ImageButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NavbarDashboardSubComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FilterResultsPipe"
                        },
                        {
                            "name": "LandingComponent"
                        },
                        {
                            "name": "SearchComponent"
                        },
                        {
                            "name": "SearchResultsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppSideBarModule"
                        },
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "SearchPanelModule"
                        },
                        {
                            "name": "SearchRoutingModule"
                        },
                        {
                            "name": "SvgButtonModule"
                        },
                        {
                            "name": "TabModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchPanelModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchPanelComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "SvgButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchPanelComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SnippetModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SnippetComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SnippetComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SvgButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SvgButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SvgButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TaskSnippetModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TaskSnippetComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TaskSnippetComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UvUiButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UvUiButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UvUiButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UvUiButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UvUiButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UvUiButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WidgetModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "WidgetComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "WidgetComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "allSearchResults",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-prototype/src/app/search/search-results/sample-search-results/allSearchResults.ts",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n      category: 'Parts',\r\n      title: 'PartABCD000001',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n\r\n    },\r\n    {\r\n      category: 'Parts',\r\n      title: 'PartABCD000002',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n    {\r\n      category: 'Parts',\r\n      title: 'PartABCD000003',\r\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.  Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n    },\r\n    {\r\n      category: 'Parts',\r\n      title: 'PartABCD000004',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n    {\r\n      category: 'Requirements',\r\n      title: 'RequirementsABCD000001',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n    {\r\n      category: 'Requirements',\r\n      title: 'RequirementsABCD000002',\r\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.  Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n    },\r\n    {\r\n      category: 'Requirements',\r\n      title: 'RequirementsABCD000003',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n    {\r\n      category: 'Requirements',\r\n      title: 'RequirementsABCD000004',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n    {\r\n      category: 'Requirements',\r\n      title: 'RequirementsABCD000005',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000001',\r\n        description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n      },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000002',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.  Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n      },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000003',\r\n        description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n      },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000004',\r\n        description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n      },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000005',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.  Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n      },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000006',\r\n        description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n      }\r\n    ]"
            },
            {
                "name": "blueBtn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button-lib.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "btn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button-lib.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "chip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button-lib.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "compareTasksData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-prototype/src/app/side-by-side/compareTasks.ts",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  }\r\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-components/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-lib/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-prototype/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DEFAULT_SEARCH_MENU_STATE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-prototype/src/app/search/models/search-results-state.ts",
                "type": "SearchResultsSideMenuState",
                "defaultValue": "{\r\n    resultsFound: false,\r\n    totalCount: 0,\r\n    menuTabs:  [\r\n      {\r\n        icon: 'assets/parts.svg#parts',\r\n        routeUri: 'landing',\r\n        title: 'Parts',\r\n        selected: false,\r\n        category: 'Parts',\r\n        entitySearchCount: 230,\r\n        showEntitySearchCount: true\r\n      },\r\n      {\r\n        icon: 'assets/document.svg#document',\r\n        routeUri: 'search-results',\r\n        title: 'Requirements',\r\n        selected: false,\r\n        category: 'Requirements',\r\n        entitySearchCount: 160,\r\n        showEntitySearchCount: true\r\n      },\r\n      {\r\n        icon: 'assets/apps-sbs.svg#sideBySide',\r\n        routeUri: 'search-results',\r\n        title: 'Documents   ',\r\n        selected: false,\r\n        category: 'Documents',\r\n        entitySearchCount: 210,\r\n        showEntitySearchCount: true\r\n      },\r\n      {\r\n        icon: 'assets/clock.svg#clock',\r\n        routeUri: 'search-results',\r\n        title: 'Recent Searches',\r\n        selected: false,\r\n        category: 'Recent',\r\n        entitySearchCount: 0,\r\n        showEntitySearchCount: true\r\n      }\r\n    ]\r\n}"
            },
            {
                "name": "dropdownItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-prototype/src/app/side-by-side/dropdownItems.ts",
                "type": "[]",
                "defaultValue": "[\r\n    {name: 'item 1'},\r\n    {name: 'item 2'},\r\n    {name: 'item 3'},\r\n    {name: 'item 4'},\r\n    {name: 'item 5'}\r\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-prototype/src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-prototype/src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button-lib.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "navItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-prototype/src/app/layouts/main/navItems.ts",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-quad-gradient.svg',\r\n        navlink: 'home-splash',\r\n        classes: []\r\n    },\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-gwu-gradient.svg',\r\n        navlink: 'global-where-used',\r\n        classes: []\r\n    },\r\n\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-sbs-gradient.svg',\r\n        navlink: 'side-by-side',\r\n        classes: []\r\n    },\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-design-ripple-gradient.svg',\r\n        navlink: '/main',\r\n        classes: []\r\n    },\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-ingestion-gradient.svg',\r\n        navlink: '/main',\r\n        classes: []\r\n    },\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-settings-gradient.svg',\r\n        navlink: 'settings',\r\n        classes: []\r\n    },\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-search-gradient.svg',\r\n        navlink: 'search',\r\n        classes: []\r\n    }\r\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/DropdownButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/ImageButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/NavbarDashboardSub.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/NavbarDashboard.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/SearchPanel.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Snippet.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/SvgButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-components/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-lib/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/uv-ui-prototype/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "roundBtn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button-lib.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button-lib.stories.ts",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\r\n    component: ButtonComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "Story<UvUiButtonComponent>",
                "defaultValue": "(args: UvUiButtonComponent) => ({\r\n    component: UvUiButtonComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/DropdownButton.stories.ts",
                "type": "Story<DropdownButtonComponent>",
                "defaultValue": "(args: DropdownButtonComponent) => ({\r\n    component: DropdownButtonComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\r\n    component: HeaderComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/ImageButton.stories.ts",
                "type": "Story<ImageButtonComponent>",
                "defaultValue": "(args: ImageButtonComponent) => ({\r\n    component: ImageButtonComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/NavbarDashboardSub.stories.ts",
                "type": "Story<NavbarDashboardSubComponent>",
                "defaultValue": "(args: NavbarDashboardSubComponent) => ({\r\n    component: NavbarDashboardSubComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/NavbarDashboard.stories.ts",
                "type": "Story<NavbarDashboardComponent>",
                "defaultValue": "(args: NavbarDashboardComponent) => ({\r\n    component: NavbarDashboardComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/SearchPanel.stories.ts",
                "type": "Story<SearchPanelComponent>",
                "defaultValue": "(args: SearchPanelComponent) => ({\r\n    component: SearchPanelComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Snippet.stories.ts",
                "type": "Story<SnippetComponent>",
                "defaultValue": "(args: SnippetComponent) => ({\r\n    component: SnippetComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/SvgButton.stories.ts",
                "type": "Story<SvgButtonComponent>",
                "defaultValue": "(args: SvgButtonComponent) => ({\r\n    component: SvgButtonComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "withAnImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n    template: `<img src=\"/profile.svg#profile\"/>`\r\n  })"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/uv-ui-prototype/src/app/search/search-results/sample-search-results/allSearchResults.ts": [
                {
                    "name": "allSearchResults",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-prototype/src/app/search/search-results/sample-search-results/allSearchResults.ts",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n      category: 'Parts',\r\n      title: 'PartABCD000001',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n\r\n    },\r\n    {\r\n      category: 'Parts',\r\n      title: 'PartABCD000002',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n    {\r\n      category: 'Parts',\r\n      title: 'PartABCD000003',\r\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.  Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n    },\r\n    {\r\n      category: 'Parts',\r\n      title: 'PartABCD000004',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n    {\r\n      category: 'Requirements',\r\n      title: 'RequirementsABCD000001',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n    {\r\n      category: 'Requirements',\r\n      title: 'RequirementsABCD000002',\r\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.  Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n    },\r\n    {\r\n      category: 'Requirements',\r\n      title: 'RequirementsABCD000003',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n    {\r\n      category: 'Requirements',\r\n      title: 'RequirementsABCD000004',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n    {\r\n      category: 'Requirements',\r\n      title: 'RequirementsABCD000005',\r\n      description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n    },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000001',\r\n        description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n      },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000002',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.  Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n      },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000003',\r\n        description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n      },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000004',\r\n        description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n      },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000005',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.  Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n      },\r\n      {\r\n        category: 'Documents',\r\n        title: 'DocumentsABCD000006',\r\n        description: 'Screw, Hexagon Flange Head Cap v4.1'\r\n      }\r\n    ]"
                }
            ],
            "stories/Button-lib.stories.ts": [
                {
                    "name": "blueBtn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button-lib.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "btn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button-lib.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "chip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button-lib.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button-lib.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "roundBtn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button-lib.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button-lib.stories.ts",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\r\n    component: ButtonComponent,\r\n    props: args,\r\n})"
                }
            ],
            "projects/uv-ui-prototype/src/app/side-by-side/compareTasks.ts": [
                {
                    "name": "compareTasksData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-prototype/src/app/side-by-side/compareTasks.ts",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  },\r\n\r\n  {\r\n    started: 'Not Started',\r\n    link: '',\r\n    title: 'Gasket Aluminum Exchangers',\r\n    description: 'Lorem ipsum dolor sit amet consectetur ',\r\n    date: 'Mar, 02'\r\n  }\r\n]"
                }
            ],
            "projects/uv-ui-components/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-components/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-components/src/test.ts",
                    "type": "literal type"
                }
            ],
            "projects/uv-ui-lib/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-lib/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-lib/src/test.ts",
                    "type": "literal type"
                }
            ],
            "projects/uv-ui-prototype/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-prototype/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-prototype/src/test.ts",
                    "type": "literal type"
                }
            ],
            "projects/uv-ui-prototype/src/app/search/models/search-results-state.ts": [
                {
                    "name": "DEFAULT_SEARCH_MENU_STATE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-prototype/src/app/search/models/search-results-state.ts",
                    "type": "SearchResultsSideMenuState",
                    "defaultValue": "{\r\n    resultsFound: false,\r\n    totalCount: 0,\r\n    menuTabs:  [\r\n      {\r\n        icon: 'assets/parts.svg#parts',\r\n        routeUri: 'landing',\r\n        title: 'Parts',\r\n        selected: false,\r\n        category: 'Parts',\r\n        entitySearchCount: 230,\r\n        showEntitySearchCount: true\r\n      },\r\n      {\r\n        icon: 'assets/document.svg#document',\r\n        routeUri: 'search-results',\r\n        title: 'Requirements',\r\n        selected: false,\r\n        category: 'Requirements',\r\n        entitySearchCount: 160,\r\n        showEntitySearchCount: true\r\n      },\r\n      {\r\n        icon: 'assets/apps-sbs.svg#sideBySide',\r\n        routeUri: 'search-results',\r\n        title: 'Documents   ',\r\n        selected: false,\r\n        category: 'Documents',\r\n        entitySearchCount: 210,\r\n        showEntitySearchCount: true\r\n      },\r\n      {\r\n        icon: 'assets/clock.svg#clock',\r\n        routeUri: 'search-results',\r\n        title: 'Recent Searches',\r\n        selected: false,\r\n        category: 'Recent',\r\n        entitySearchCount: 0,\r\n        showEntitySearchCount: true\r\n      }\r\n    ]\r\n}"
                }
            ],
            "projects/uv-ui-prototype/src/app/side-by-side/dropdownItems.ts": [
                {
                    "name": "dropdownItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-prototype/src/app/side-by-side/dropdownItems.ts",
                    "type": "[]",
                    "defaultValue": "[\r\n    {name: 'item 1'},\r\n    {name: 'item 2'},\r\n    {name: 'item 3'},\r\n    {name: 'item 4'},\r\n    {name: 'item 5'}\r\n]"
                }
            ],
            "projects/uv-ui-prototype/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-prototype/src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "projects/uv-ui-prototype/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-prototype/src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "Story<UvUiButtonComponent>",
                    "defaultValue": "(args: UvUiButtonComponent) => ({\r\n    component: UvUiButtonComponent,\r\n    props: args,\r\n})"
                }
            ],
            "projects/uv-ui-prototype/src/app/layouts/main/navItems.ts": [
                {
                    "name": "navItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/uv-ui-prototype/src/app/layouts/main/navItems.ts",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-quad-gradient.svg',\r\n        navlink: 'home-splash',\r\n        classes: []\r\n    },\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-gwu-gradient.svg',\r\n        navlink: 'global-where-used',\r\n        classes: []\r\n    },\r\n\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-sbs-gradient.svg',\r\n        navlink: 'side-by-side',\r\n        classes: []\r\n    },\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-design-ripple-gradient.svg',\r\n        navlink: '/main',\r\n        classes: []\r\n    },\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-ingestion-gradient.svg',\r\n        navlink: '/main',\r\n        classes: []\r\n    },\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-settings-gradient.svg',\r\n        navlink: 'settings',\r\n        classes: []\r\n    },\r\n    {\r\n        icon: 'http://dpzaq1wj21co3.cloudfront.net/icons/gradient/apps-search-gradient.svg',\r\n        navlink: 'search',\r\n        classes: []\r\n    }\r\n]"
                }
            ],
            "stories/DropdownButton.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/DropdownButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/DropdownButton.stories.ts",
                    "type": "Story<DropdownButtonComponent>",
                    "defaultValue": "(args: DropdownButtonComponent) => ({\r\n    component: DropdownButtonComponent,\r\n    props: args,\r\n})"
                }
            ],
            "stories/Header.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\r\n    component: HeaderComponent,\r\n    props: args,\r\n})"
                },
                {
                    "name": "withAnImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n    template: `<img src=\"/profile.svg#profile\"/>`\r\n  })"
                }
            ],
            "stories/ImageButton.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/ImageButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/ImageButton.stories.ts",
                    "type": "Story<ImageButtonComponent>",
                    "defaultValue": "(args: ImageButtonComponent) => ({\r\n    component: ImageButtonComponent,\r\n    props: args,\r\n})"
                }
            ],
            "stories/NavbarDashboardSub.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/NavbarDashboardSub.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/NavbarDashboardSub.stories.ts",
                    "type": "Story<NavbarDashboardSubComponent>",
                    "defaultValue": "(args: NavbarDashboardSubComponent) => ({\r\n    component: NavbarDashboardSubComponent,\r\n    props: args,\r\n})"
                }
            ],
            "stories/NavbarDashboard.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/NavbarDashboard.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/NavbarDashboard.stories.ts",
                    "type": "Story<NavbarDashboardComponent>",
                    "defaultValue": "(args: NavbarDashboardComponent) => ({\r\n    component: NavbarDashboardComponent,\r\n    props: args,\r\n})"
                }
            ],
            "stories/SearchPanel.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/SearchPanel.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/SearchPanel.stories.ts",
                    "type": "Story<SearchPanelComponent>",
                    "defaultValue": "(args: SearchPanelComponent) => ({\r\n    component: SearchPanelComponent,\r\n    props: args,\r\n})"
                }
            ],
            "stories/Snippet.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Snippet.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Snippet.stories.ts",
                    "type": "Story<SnippetComponent>",
                    "defaultValue": "(args: SnippetComponent) => ({\r\n    component: SnippetComponent,\r\n    props: args,\r\n})"
                }
            ],
            "stories/SvgButton.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/SvgButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/SvgButton.stories.ts",
                    "type": "Story<SvgButtonComponent>",
                    "defaultValue": "(args: SvgButtonComponent) => ({\r\n    component: SvgButtonComponent,\r\n    props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "projects/uv-ui-prototype/src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "AuthGuardComponent",
                        "canActivate": [
                            "AuthGuardService"
                        ]
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "logout",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "auth-callback",
                        "component": "AuthGuardComponent"
                    },
                    {
                        "path": "main",
                        "component": "MainComponent",
                        "children": [
                            {
                                "path": "home-splash",
                                "loadChildren": "./home-splash/home-splash.module#HomeSplashModule"
                            },
                            {
                                "path": "side-by-side",
                                "component": "SideBySideComponent"
                            },
                            {
                                "path": "global-where-used",
                                "component": "GlobalWhereUsedComponent"
                            },
                            {
                                "path": "search",
                                "loadChildren": "./search/search.module#SearchModule"
                            },
                            {
                                "path": "settings",
                                "component": "SettingsComponent"
                            }
                        ]
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "projects/uv-ui-prototype/src/app/home-splash/home-splash-routing.module.ts",
                "module": "HomeSplashRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomeSplashComponent"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "projects/uv-ui-prototype/src/app/search/search-routing.module.ts",
                "module": "SearchRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "SearchComponent",
                        "children": [
                            {
                                "path": "",
                                "component": "LandingComponent"
                            },
                            {
                                "path": "landing",
                                "component": "LandingComponent"
                            },
                            {
                                "path": "search-results",
                                "component": "SearchResultsComponent"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/uv-ui-components/src/lib/uv-ui-button/uv-ui-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UvUiButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/app-bar/app-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/app-side-bar/app-side-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppSideBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/dropdown-button/dropdown-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/image-button/image-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/interfaces/dropdown-button.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/interfaces/navbar-sub.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "INavBarSub",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/interfaces/navbar.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "INav",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/interfaces/side-by-side.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITask",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/navbar-dashboard-sub/navbar-dashboard-sub.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarDashboardSubComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/navbar-dashboard/navbar-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/search-panel/search-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/snippet/snippet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnippetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/svg-button/svg-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SvgButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/task-snippet/task-snippet.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskSnippetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/uv-ui-button/uv-ui-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UvUiButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/lib/widget/widget.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WidgetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/global-where-used/global-where-used.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GlobalWhereUsedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/home-splash/home-splash.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeSplashComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/layouts/auth-guard/auth-guard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthGuardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/layouts/main/main.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/layouts/main/navItems.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "navItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/search/landing/landing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/search/models/menu-tab.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MenuTab",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/search/models/search-result.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SearchResult",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/search/models/search-results-state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SearchResultsSideMenuState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/search/models/search-results-state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_SEARCH_MENU_STATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/search/search-results/filter-results.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilterResultsPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/search/search-results/sample-search-results/allSearchResults.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "allSearchResults",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/search/search-results/search-results.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchResultsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/services/auth-guard.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuardService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/services/header.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HeaderService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/services/helper.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HelperService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/services/search.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SearchService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/settings/settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/side-by-side/compareTasks.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "compareTasksData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/side-by-side/dropdownItems.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dropdownItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/side-by-side/side-by-side.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideBySideComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/app/start-page/start-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StartPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/uv-ui-prototype/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button-lib.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "blueBtn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button-lib.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "btn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button-lib.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button-lib.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button-lib.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "roundBtn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button-lib.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/DropdownButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/DropdownButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withAnImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/ImageButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/ImageButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/NavbarDashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/NavbarDashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/NavbarDashboardSub.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/NavbarDashboardSub.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/SearchPanel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/SearchPanel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Snippet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Snippet.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/SvgButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/SvgButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}